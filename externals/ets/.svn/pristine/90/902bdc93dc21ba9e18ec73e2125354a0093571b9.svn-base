public fun NI6071E_ErrorToString(in _status)
{

	switch(_status)
	{
		case(0) return ("SUCCESS");
		case(1) return ("Max device id 7");
		case(2) return ("Can not allocate buffer memory");
		case(3) return ("Module not triggered");
		case(4) return ("Module not initilized");
		case(-10001) return ("syntaxError	An error was detected in the input string. The arrangement or ordering of the characters in the string is not consistent with the expected ordering.");
        case(-10002) return ("semanticsError	An error was detected in the input string; the syntax of the string is correct, but certain values specified in the string are inconsistent with other values specified in the string.");
        case(-10003) return ("invalidValueError	The value of a numeric parameter is invalid");
        case(-10004) return ("valueConflictError	The value of a numeric parameter is inconsistent with another one. Therefore, the combination is invalid.");
        case(-10005) return ("badDeviceError	The device is invalid.");
        case(-10006) return ("badLineError	The line is invalid.");
        case(-10007) return ("badChanError	A channel, port, or counter is out of range for the device type or device configuration, the combination of channels is not allowed, or the scan order must be reversed (0 last).");
        case(-10008) return ("badGroupError	The group is invalid.");
        case(-10009) return ("badCounterError	The counter is invalid.");
        case(-10010) return ("badCountError	The count is too small or too large for the specified counter, or the given I/O transfer count is not appropriate for the current buffer or channel configuration.");
        case(-10011) return ("badIntervalError	The analog input scan rate is too fast for the number of channels and the channel clock rate, or the given clock rate is not supported by the associated counter or I/O channel.");
        case(-10012) return ("badRangeError	The analog input or analog output voltage or current range is invalid for the specified channel, or you are writing an invalid voltage or current to the analog output.");
        case(-10013) return ("badErrorCodeError	The driver returned an unrecognized or unlisted error code.");
        case(-10014) return ("groupTooLargeError	The group size is too large for the board.");
        case(-10015) return ("badTimeLimitError	The time limit is invalid.");
        case(-10016) return ("badReadCountError	The read count is invalid.");
        case(-10017) return ("badReadModeError	The read mode is invalid.");
        case(-10018) return ("badReadOffsetError	The offset is unreachable.");
        case(-10019) return ("badClkFrequencyError	The frequency is invalid.");
        case(-10020) return ("badTimebaseError	The timebase is invalid.");
        case(-10021) return ("badLimitsError	The limits are beyond the range of the board.");
        case(-10022) return ("badWriteCountError	Your data array contains an incomplete update, you are trying to write past the end of the internal buffer, or your output operation is continuous and the length of your array is not a multiple of one half of the internal buffer size.");
        case(-10023) return ("badWriteModeError	The write mode is out of range or is disallowed.");
        case(-10024) return ("badWriteOffsetError	Adding the write offset to the write mark places the write mark outside the internal buffer.");
        case(-10025) return ("limitsOutOfRangeError	The requested input limits exceed the capability of the board or configuration. Alternative limits were selected.");
        case(-10026) return ("badBufferSpecificationError	The requested number of buffers or the buffer size is not allowed. The buffer limit for Lab and 1200 devices of 64K samples has been exceeded, or the board does not support multiple buffers.");
        case(-10027) return ("badDAQEventError	For DAQEvents 0 and 1, general value A must be greater than 0 and less than the internal buffer size. If DMA is used for DAQEvent 1, general value A must divide the internal buffer size evenly, with no remainder. If the TIO        case(-10 is used for DAQEvent 4, general value A must be 1 or 2.");
        case(-10028) return ("badFilterCutoffError	The cutoff frequency specified is not valid for this device.");
        case(-10029) return ("obsoleteFunctionError	The function you are calling is no longer supported in this version of the driver.");
        case(-10030) return ("badBaudRateError	The specified baud rate for communicating with the serial port is not valid on this platform.");
        case(-10031) return ("badChassisIDError	The specified SCXI chassis does not correspond to a configured SCXI chassis.");
        case(-10032) return ("badModuleSlotError	The SCXI module slot that was specified is invalid or corresponds to an empty slot.");
        case(-10033) return ("invalidWinHandleError	The window handle passed to the function is invalid.");
        case(-10034) return ("noSuchMessageError	No configured message matches the one you tried to delete.");
        case(-10035) return ("irrelevantAttributeError	The specified attribute is not relevant.");
        case(-10036) return ("badYearError	The specified year is invalid.");
        case(-10037) return ("badMonthError	The specified month is invalid.");
        case(-10038) return ("badDayError	The specified day is invalid.");
        case(-10039) return ("stringTooLongError	The specified input string is too long. For instance, DAQScope 5102 devices can store a string up to 32 bytes in length on the calibration EEPROM.");
        case(-10040) return ("badGroupSizeError	The group size is invalid.");
        case(-10041) return ("badTaskIDError	The specified task ID is invalid. For instance, you may have connected a taskID from an Analog Input VI to a Digital I/O VI.");
        case(-10042) return ("inappropriateControlCodeError	The specified control code is inappropriate for the current configuration or state.");
        case(-10043) return ("badDivisorError	The specified divisor is invalid.");
        case(-10044) return ("badPolarityError	The specified polarity is invalid.");
        case(-10045) return ("badInputModeError	The specified input mode is invalid.");
        case(-10046) return ("badExcitationError	The excitation value specified is not valid for this device.");
        case(-10047) return ("badConnectionTypeError	The type of SCXI channel connection specified is not valid for this module.");
        case(-10048) return ("badExcitationTypeError	The excitation type specified is not valid for this device.");
        case(-10050) return ("badChanListError	There is more than one channel name in the channel list that corresponds to the same hardware channel.");
        case(-10079) return ("badTrigSkipCountError	The trigger skip count is invalid.");
        case(-10080) return ("badGainError	The gain or gain adjust is invalid.");
        case(-10081) return ("badPretrigCountError	The pretrigger sample count is invalid.");
        case(-10082) return ("badPosttrigCountError	The posttrigger sample count is invalid.");
        case(-10083) return ("badTrigModeError	The trigger mode is invalid.");
        case(-10084) return ("badTrigCountError	The trigger count is invalid.");
        case(-10085) return ("badTrigRangeError	The trigger range or trigger hysteresis window is invalid.");
        case(-10086) return ("badExtRefError	The external reference is invalid.");
        case(-10087) return ("badTrigTypeError	The trigger type is invalid.");
        case(-10088) return ("badTrigLevelError	The trigger level is invalid.");
        case(-10089) return ("badTotalCountError	The total count is inconsistent with the buffer size and pretrigger scan count or with the board type.");
        case(-10090) return ("badRPGError	The individual range, polarity, and gain settings are valid but the combination is not allowed.");
        case(-10091) return ("badIterationsError	You have attempted to use an invalid setting for the iterations parameter. The iterations value must be 0 or greater. Your device might be limited to only two values, 0 and 1.");
        case(-10092) return ("lowScanIntervalError	Some devices require a time gap between the last sample in a scan and the start of the next scan. The scan interval you have specified does not provide a large enough gap for the board. See your documentation for an explanation.");
        case(-10093) return ("fifoModeError	FIFO mode waveform generation cannot be used because at least one condition is not satisfied.");
        case(-10094) return ("badCalDACconstError	The calDAC constant passed to the function is invalid.");
        case(-10095) return ("badCalStimulusError	The calibration stimulus passed to the function is invalid.");
        case(-10096) return ("badCalibrationConstantError	The specified calibration constant is invalid.");
        case(-10097) return ("badCalOpError	The specified calibration operation is invalid.");
        case(-10098) return ("badCalConstAreaError	The specified calibration constant area is invalid. For instance, the specified calibration constant area contains constants which cannot be modified outside the factory.");
        case(-10100) return ("badPortWidthError	The requested digital port width is not a multiple of the hardware port width or is not attainable by the DAQ hardware.");
        case(-10120) return ("gpctrBadApplicationError	Invalid application used.");
        case(-10121) return ("gpctrBadCtrNumberError	Invalid counterNumber used.");
        case(-10122) return ("gpctrBadParamValueError	Invalid paramValue used.");
        case(-10123) return ("gpctrBadParamIDError	Invalid paramID used.");
        case(-10124) return ("gpctrBadEntityIDError	Invalid entityID used.");
        case(-10125) return ("gpctrBadActionError	Invalid action used.");
        case(-10126) return ("gpctrSourceSelectError	Invalid source selected.");
        case(-10127) return ("badCountDirError	The specified counter does not support the specified count direction.");
        case(-10128) return ("badGateOptionError	The specified gating option is invalid.");
        case(-10129) return ("badGateModeError	The specified gate mode is invalid.");
        case(-10130) return ("badGateSourceError	The specified gate source is invalid.");
        case(-10131) return ("badGateSignalError	The specified gate signal is invalid.");
        case(-10132) return ("badSourceEdgeError	The specified source edge is invalid.");
        case(-10133) return ("badOutputTypeError	The specified output type is invalid.");
        case(-10134) return ("badOutputPolarityError	The specified output polarity is invalid.");
        case(-10135) return ("badPulseModeError	The specified pulse mode is invalid.");
        case(-10136) return ("badDutyCycleError	The specified duty cycle is invalid.");
        case(-10137) return ("badPulsePeriodError	The specified pulse period is invalid.");
        case(-10138) return ("badPulseDelayError	The specified pulse delay is invalid.");
        case(-10139) return ("badPulseWidthError	The specified pulse width is invalid.");
        case(-10140) return ("badFOUTportError	The specified frequency output (FOUT or FREQ_OUT) port is invalid.");
        case(-10141) return ("badAutoIncrementModeError	The specified autoincrement mode is invalid.");
        case(-10180) return ("badNotchFilterError	The specified notch filter is invalid.");
        case(-10181) return ("badMeasModeError	The specified measurement mode is invalid.");
        case(-10200) return ("EEPROMreadError	Unable to read data from EEPROM.");
        case(-10201) return ("EEPROMwriteError	Unable to write data to EEPROM.");
        case(-10202) return ("EEPROMwriteProtectionError	You cannot write into this location or area of your EEPROM because it is write protected. You may be trying to store calibration constants into a write-protected area. Select the user area of the EEPROM instead.");
        case(-10203) return ("EEPROMinvalidLocationError	The specified EEPROM location is invalid.");
        case(-10204) return ("EEPROMinvalidPasswordError	The password for accessing the EEPROM is incorrect.");
        case(-10240) return ("noDriverError	The driver interface could not locate or open the driver.");
        case(-10241) return ("oldDriverError	One of the driver files or the configuration utility is out of date, or a particular feature of the Channel Wizard is not supported in this version of the driver.");
        case(-10242) return ("functionNotFoundError	The specified function is not located in the driver.");
        case(-10243) return ("configFileError	The driver could not locate or open the configuration file, or the format of the configuration file is not compatible with the currently installed driver.");
        case(-10244) return ("deviceInitError	The driver encountered a hardware initialization error while attempting to configure the device.");
        case(-10245) return ("osInitError	The driver encountered an operating-system error while attempting to perform an operation, or the operating system does not support an operation performed by the driver.");
        case(-10246) return ("communicationsError	The driver is unable to communicate with the specified external device.");
        case(-10247) return ("cmosConfigError	The CMOS configuration memory for the device is empty or invalid, the configuration specified does not agree with the current configuration of the device, or the EISA system configuration is invalid.");
        case(-10248) return ("dupAddressError	The base addresses for two or more devices are the same, so the driver is unable to access the specified device.");
        case(-10249) return ("intConfigError	The interrupt configuration is incorrect given the capabilities of the computer or device.");
        case(-10250) return ("dupIntError	The interrupt levels for two or more devices are the same.");
        case(-10251) return ("dmaConfigError	The DMA configuration is incorrect given the capabilities of the computer/DMA controller or device.");
        case(-10252) return ("dupDMAError	The DMA channels for two or more devices are the same.");
        case(-10253) return ("jumperlessBoardError	Unable to find one or more jumperless boards you have configured using Measurement & Automation Explorer.");
        case(-10254) return ("DAQCardConfError	Cannot configure the DAQCard because 1) the correct version of the card and socket services software is not installed; 2) the card in the PCMCIA socket is not a DAQCard; or 3) the base address and/or interrupt level requested are not available according to the card and socket services resource manager. Try different settings or use AutoAssign in Measurement & Automation Explorer.");
        case(-10255) return ("remoteChassisDriverInitError	There was an error in initializing the driver for Remote SCXI.");
        case(-10256) return ("comPortOpenError	There was an error in opening the specified COM port.");
        case(-10257) return ("baseAddressError	Bad base address specified in Measurement & Automation Explorer.");
        case(-10258) return ("dmaChannel1Error	Bad DMA channel 1 specified in Measurement & Automation Explorer or by the operating system.");
        case(-10259) return ("dmaChannel2Error	Bad DMA channel 2 specified in Measurement & Automation Explorer or by the operating system.");
        case(-10260) return ("dmaChannel3Error	Bad DMA channel 3 specified in Measurement & Automation Explorer or by the operating system.");
        case(-10261) return ("userModeToKernelModeCallError	The user mode code failed when calling the kernel mode code.");
        case(-10340) return ("noConnectError	No RTSI or PFI signal/line is connected, or the specified signal and the specified line are not connected, or your connection to an RDA server either cannot be made or has been terminated.");
        case(-10341) return ("badConnectError	The RTSI or PFI signal/line cannot be connected as specified.");
        case(-10342) return ("multConnectError	The specified RTSI signal is already being driven by a RTSI line, or the specified RTSI line is already being driven by a RTSI signal.");
        case(-10343) return ("SCXIConfigError	The specified SCXI configuration parameters are invalid, or the function cannot be executed with the current SCXI configuration.");
        case(-10344) return ("chassisSynchedError	The Remote SCXI unit is not synchronized with the host. Reset the chassis again to resynchronize it with the host.");
        case(-10345) return ("chassisMemAllocError	The required amount of memory cannot be allocated on the Remote SCXI unit for the specified operation.");
        case(-10346) return ("badPacketError	The packet received by the Remote SCXI unit is invalid. Check your serial port cable connections.");
        case(-10347) return ("chassisCommunicationError	There was an error in sending a packet to the remote chassis. Check your serial port cable connections.");
        case(-10348) return ("waitingForReprogError		The Remote SCXI unit is in reprogramming mode and is waiting for reprogramming commands from Measurement & Automation Explorer.");
        case(-10349) return ("SCXIModuleTypeConflictError	The module ID read from the SCXI module conflicts with the configured module type.");
        case(-10350) return ("CannotDetermineEntryModuleError	An SCXI entry module cabled to the measurement device has not been specified by the user, and NI-DAQ cannot uniquely determine the entry module for the current SCXI configuration.");
        case(-10360) return ("DSPInitError	The DSP driver was unable to load the kernel for its operating system.");
        case(-10370) return ("badScanListError	The scan list is invalid. For example, you are mixing AMUX-64T channels and onboard channels, scanning SCXI channels out of order, or have specified a different starting channel for the same SCXI module. Also, the driver attempts to achieve complicated gain distributions over SCXI channels on the same module by manipulating the scan list, and returns this error if it fails.");
        case(-10380) return ("invalidSignalSrcError	The specified signal source is invalid for the selected signal name.");
        case(-10381) return ("invalidSignalNameError	The specified signal name is invalid.");
        case(-10382) return ("invalidSrcSpecError	The specified source specification is invalid for the signal source or signal name.");
        case(-10383) return ("invalidSignalDestError	The specified signal destination is invalid.");
        case(-10400) return ("userOwnedRsrcError	The specified resource is owned by the user and cannot be accessed or modified by the driver.");
        case(-10401) return ("unknownDeviceError	The specified device is not a National Instruments product, so the driver does not support the device, which can happen if the driver was released before the device was supported, or the device has not been configured using the Measurement & Automation Explorer.");
        case(-10402) return ("deviceNotFoundError	No device is located in the specified slot or at the specified address.");
        case(-10403) return ("deviceSupportError	The specified device does not support the requested action (the driver recognizes the device, but the action is inappropriate for the device).");
        case(-10404) return ("noLineAvailError	No line is available.");
        case(-10405) return ("noChanAvailError	No channel is available.");
        case(-10406) return ("noGroupAvailError	No group is available.");
        case(-10407) return ("lineBusyError	The specified line is in use.");
        case(-10408) return ("chanBusyError	The specified channel is in use.");
        case(-10409) return ("groupBusyError	The specified group is in use.");
        case(-10410) return ("relatedLCGBusyError	A related line, channel, or group is in use; if the driver configures the specified line, channel, or group, the configuration, data, or handshaking lines for the related line, channel, or group will be disturbed.");
        case(-10411) return ("counterBusyError	The specified counter is in use.");
        case(-10412) return ("noGroupAssignError	No group is assigned, or the specified line or channel cannot be assigned to a group.");
        case(-10413) return ("groupAssignError	A group is already assigned, or the specified line or channel is already assigned to a group.");
        case(-10414) return ("reservedPinError	The selected signal requires a pin that is reserved and configured only by NI-DAQ. You cannot configure this pin yourself.");
        case(-10415) return ("externalMuxSupportError	This function does not support your DAQ device when an external multiplexer, such as an AMUX-64T or SCXI, is connected to it.");
        case(-10440) return ("sysOwnedRsrcError	The specified resource is owned by the driver and cannot be accessed or modified by the user.");
        case(-10441) return ("memConfigError	No memory is configured to support the current data-transfer mode, or the configured memory does not support the current data-transfer mode. If block transfers are in use, the memory must be capable of performing block transfers.");
        case(-10442) return ("memDisabledError	The specified memory is disabled or is unavailable given the current addressing mode.");
        case(-10443) return ("memAlignmentError	The transfer buffer is not aligned properly for the current data-transfer mode. For example, the buffer is at an odd address, is not aligned to a 32-bit boundary, is not aligned to a 512-bit boundary, and so on. Alternatively, the driver is unable to align the buffer because the buffer is too small.");
        case(-10444) return ("memFullError	No more system memory is available on the heap, no more memory is available on the device, or insufficient disk space is available.");
        case(-10445) return ("memLockError	The transfer buffer cannot be locked into physical memory. On PC AT machines, portions of the DMA data acquisition buffer may be in an invalid DMA region above 16 megabytes.");
        case(-10446) return ("memPageError	The transfer buffer contains a page break. System resources may require reprogramming when the page break is encountered.");
        case(-10447) return ("memPageLockError	The operating environment is unable to grant a page lock.");
        case(-10448) return ("stackMemError	The driver is unable to continue parsing a string input due to stack limitations.");
        case(-10449) return ("cacheMemError	A cache-related error occurred, or caching is not supported in the current mode.");
        case(-10450) return ("physicalMemError	A hardware error occurred in physical memory, or no memory is located at the specified address.");
        case(-10451) return ("virtualMemError	The driver is unable to make the transfer buffer contiguous in virtual memory and therefore cannot lock it into physical memory, so the buffer cannot be used for DMA transfers.");
        case(-10452) return ("noIntAvailError	No interrupt level is available for use.");
        case(-10453) return ("intInUseError	The specified interrupt level is already in use by another device.");
        case(-10454) return ("noDMACError	No DMA controller is available in the system.");
        case(-10455) return ("noDMAAvailError	No DMA channel is available for use.");
        case(-10456) return ("DMAInUseError	The specified DMA channel is already in use by another device.");
        case(-10457) return ("badDMAGroupError	DMA cannot be configured for the specified group because it is too small, too large, or misaligned. Consult the device user manual to determine group ramifications with respect to DMA.");
        case(-10458) return ("diskFullError	The storage disk you specified is full.");
        case(-10459) return ("DLLInterfaceError	The NI-DAQ DLL could not be called due to an interface error.");
        case(-10460) return ("interfaceInteractionError	You have mixed VIs from the DAQ library and the _DAQ compatibility library (LabVIEW 2.2 style VIs). You may switch between the two libraries only by running the DAQ VI Device Reset before calling _DAQ compatibility VIs or by running the compatibility VI Board Reset before calling DAQ VIs.");
        case(-10461) return ("resourceReservedError	The specified resource is unavailable because it has already been reserved by another entity.");
        case(-10462) return ("resourceNotReservedError	The specified resource has not been reserved, so the action is not allowed.");
        case(-10463) return ("mdResourceAlreadyReservedError	Another entity has already reserved the requested resource.");
        case(-10464) return ("mdResourceReservedError	Attempted to access a reserved resource that requires the usage of a key.");
        case(-10465) return ("mdResourceNotReservedError	Attempting to lift a reservation off a resouce that previously had no reservation.");
        case(-10466) return ("mdResourceAccessKeyError	The requested operation cannot be performed because the key supplied is invalid.");
        case(-10467) return ("mdResourceNotRegisteredError	The resource requested is not registered with the minidriver.");
        case(-10480) return ("muxMemFullError	The scan list is too large to fit into the mux-gain memory of the board.");
        case(-10481) return ("bufferNotInterleavedError	You must provide a single buffer of interleaved data, and the channels must be in ascending order. You cannot use DMA to transfer data from two buffers; however, you may be able to use interrupts.");
        case(-10482) return ("waveformBufferSizeError	You have specified channels with different waveform lengths. To fix the problem, make sure the waveform data for every channel has the same number of array elements.");
        case(-10540) return ("SCXIModuleNotSupportedError	At least one of the SCXI modules specified is not supported for the operation.");
        case(-10541) return ("TRIG1ResourceConflict	CTRB1 will drive COUTB1, however CTRB1 will also drive TRIG1. This may cause unpredictable results when scanning the chassis.");
        case(-10542) return ("matrixTerminalBlockError	This function requires that no matrix terminal block is configured with the SCXI module.");
        case(-10543) return ("noMatrixTerminalBlockError	This function requires that some matrix terminal block is configured with the SCXI module.");
        case(-10544) return ("invalidMatrixTerminalBlockError	The type of matrix terminal block configured will not allow proper operation of this function with the given parameters.");
        case(-10560) return ("invalidDSPHandleError	The DSP handle input is not valid.");
        case(-10561) return ("DSPDataPathBusyError	Either DAQ or WFM can use a PC memory buffer, but not both at the same time.");
        case(-10600) return ("noSetupError	No setup operation has been performed for the specified resources, or some resources require a specific ordering of calls for proper setup.");
        case(-10601) return ("multSetupError	The specified resources have already been configured by a setup operation.");
        case(-10602) return ("noWriteError	No output data has been written into the transfer buffer.");
        case(-10603) return ("groupWriteError	The output data associated with a group must be for a single channel or must be for consecutive channels.");
        case(-10604) return ("activeWriteError	Once data generation has started, only the transfer buffers originally written to may be updated. If DMA is active and a single transfer buffer contains interleaved channel data, new data must be provided for all output channels currently using the DMA channel.");
        case(-10605) return ("endWriteError	No data was written to the transfer buffer because the final data block has already been loaded.");
        case(-10606) return ("notArmedError	The specified resource is not armed.");
        case(-10607) return ("armedError	The specified resource is already armed.");
        case(-10608) return ("noTransferInProgError	No transfer is in progress for the specified resource.");
        case(-10609) return ("transferInProgError	A transfer is already in progress for the specified resource, or the operation is not allowed because the device is in the process of performing transfers, possibly with different resources.");
        case(-10610) return ("transferPauseError	A single output channel in a group may not be paused if the output data for the group is interleaved.");
        case(-10611) return ("badDirOnSomeLinesError	Some of the lines in the specified channel are not configured for the transfer direction specified. For a write transfer, some lines are configured for input. For a read transfer, some lines are configured for output.");
        case(-10612) return ("badLineDirError	The specified line does not support the specified transfer direction.");
        case(-10613) return ("badChanDirError	The specified channel does not support the specified transfer direction, or you have performed an operation on a digital port or line configured for the opposite direction.");
        case(-10614) return ("badGroupDirError	The specified group does not support the specified transfer direction.");
        case(-10615) return ("masterClkError	The clock configuration for the clock master is invalid.");
        case(-10616) return ("slaveClkError	The clock configuration for the clock slave is invalid.");
        case(-10617) return ("noClkSrcError	No source signal has been assigned to the clock resource.");
        case(-10618) return ("badClkSrcError	The specified source signal cannot be assigned to the clock resource.");
        case(-10619) return ("multClkSrcError	A source signal has already been assigned to the clock resource.");
        case(-10620) return ("noTrigError	No trigger signal has been assigned to the trigger resource.");
        case(-10621) return ("badTrigError	The specified trigger signal cannot be assigned to the trigger resource.");
        case(-10622) return ("preTrigError	The pretrigger mode is not supported or is not available in the current configuration, or no pretrigger source has been assigned.");
        case(-10623) return ("postTrigError	No posttrigger source has been assigned.");
        case(-10624) return ("delayTrigError	The delayed trigger mode is not supported or is not available in the current configuration, or no delay source has been assigned.");
        case(-10625) return ("masterTrigError	The trigger configuration for the trigger master is invalid.");
        case(-10626) return ("slaveTrigError	The trigger configuration for the trigger slave is invalid.");
        case(-10627) return ("noTrigDrvError	No signal has been assigned to the trigger resource.");
        case(-10628) return ("multTrigDrvError	A signal has already been assigned to the trigger resource.");
        case(-10629) return ("	invalidOpModeError	The specified operating mode is invalid, or the resources have not been configured for the specified operating mode.");
        case(-10630) return ("invalidReadError	The parameters specified to read data were invalid in the context of the acquisition. For example, an attempt was made to read 0 bytes from the transfer buffer, or an attempt was made to read past the end of the transfer buffer.");
        case(-10631) return ("noInfiniteModeError	Continuous input or output transfers are not allowed in the current operating mode, or continuous operation is not allowed for this type of device.");
        case(-10632) return ("someInputsIgnoredError	Certain inputs were ignored because they are not relevant in the current operating mode.");
        case(-10633) return ("invalidRegenModeError	The specified analog output regeneration mode is not allowed for this board.");
        case(-10634) return ("noContTransferInProgressError	No continuous (double buffered) transfer is in progress for the specified resource.");
        case(-10635) return ("invalidSCXIOpModeError	Either the SCXI operating mode specified in a configuration call is invalid, or a module is in the wrong operating mode to execute the function call.");
        case(-10636) return ("noContWithSynchError	You cannot start a continuous (double-buffered) operation with a synchronous function call.");
        case(-10637) return ("bufferAlreadyConfigError	Attempted to configure a buffer after the buffer had already been configured. You can configure a buffer only once.");
        case(-10638) return ("badClkDestError	The clock cannot be assigned to the specified destination.");
        case(-10670) return ("rangeBadForMeasModeError	The input range is invalid for the configured measurement mode.");
        case(-10671) return ("autozeroModeConflictError	Autozero cannot be enabled for the configured measurement mode.");
        case(-10680) return ("badChanGainError	All channels of this board must have the same gain.");
        case(-10681) return ("badChanRangeError	All channels of this board must have the same range.");
        case(-10682) return ("badChanPolarityError	All channels of this board must be the same polarity.");
        case(-10683) return ("badChanCouplingError	All channels of this board must have the same coupling.");
        case(-10684) return ("badChanInputModeError	All channels of this board must have the same input mode.");
        case(-10685) return ("clkExceedsBrdsMaxConvRateError	The clock rate exceeds the recommended maximum rate of the board.");
        case(-10686) return ("scanListInvalidError	A configuration change has invalidated the scan list.");
        case(-10687) return ("bufferInvalidError	A configuration change has invalidated the acquisition buffer, or an acquisition buffer has not been configured.");
        case(-10688) return ("noTrigEnabledError	The number of total scans and pretrigger scans implies that a triggered start is intended, but triggering is not enabled.");
        case(-10689) return ("digitalTrigBError	Digital trigger B is illegal for the number of total scans and pretrigger scans specified.");
        case(-10690) return ("digitalTrigAandBError	This board does not allow digital triggers A and B to be enabled at the same time.");
        case(-10691) return ("extConvRestrictionError	This board does not allow an external sample clock with an external scan clock, start trigger, or stop trigger.");
        case(-10692) return ("chanClockDisabledError	The acquisition cannot be started because the channel clock is disabled.");
        case(-10693) return ("extScanClockError	You cannot use an external scan clock when doing a single scan of a single channel.");
        case(-10694) return ("unsafeSamplingFreqError	The scan rate is above the maximum or below the minimum for the hardware, gains, and filters used.");
        case(-10695) return ("DMAnotAllowedError	You have set up an operation that requires the use of interrupts. DMA is not allowed. For example, some DAQ events, such as messaging and LabVIEW occurrences, require interrupts.");
        case(-10696) return ("multiRateModeError	Multi-rate scanning cannot be used with the AMUX-64, SCXI, or pretriggered acquisitions.");
        case(-10697) return ("rateNotSupportedError	Unable to convert your timebase/interval pair to match the actual hardware capabilities of this board.");
        case(-10698) return ("timebaseConflictError	You cannot use this combination of scan and sample clock timebases for this board.");
        case(-10699) return ("polarityConflictError	You cannot use this combination of scan and sample clock source polarities for this operation and board.");
        case(-10700) return ("signalConflictError	You cannot use this combination of scan and convert clock signal sources for this operation and board.");
        case(-10701) return ("noLaterUpdateError	The call had no effect because the specified channel had not been set for later internal update.");
        case(-10702) return ("prePostTriggerError	Pretriggering and posttriggering cannot be used simultaneously on the Lab and 1200 series devices.");
        case(-10710) return ("noHandshakeModeError	The specified port has not been configured for handshaking.");
        case(-10720) return ("noEventCtrError	The specified counter is not configured for event-counting operation.");
        case(-10740) return ("SCXITrackHoldError	A signal has already been assigned to the SCXI track-and-hold trigger line, or a control call was inappropriate because the specified module is not configured for single-channel operation.");
        case(-10780) return ("sc2040InputModeError	When you have an SC-2040 attached to your device, all analog input channels must be configured for differential input mode.");
        case(-10781) return ("outputTypeMustBeVoltageError	The polarity of the output channel cannot be bipolar when outputting currents.");
        case(-10782) return ("sc2040HoldModeError	The specified operation cannot be performed with the SC-2040 configured in hold mode.");
        case(-10783) return ("calConstPolarityConflictError	Calibration constants in the load area have a different polarity from the current configuration. Therefore, you should load constants from factory.");
        case(-10800) return ("timeOutError	The operation could not complete within the time limit.");
        case(-10801) return ("calibrationError	An error occurred during the calibration process. Possible reasons for this error include incorrect connection of the stimulus signal, incorrect value of the stimulus signal, or malfunction of your DAQ device.");
        case(-10802) return ("dataNotAvailError	The requested amount of data has not yet been acquired.");
        case(-10803) return ("transferStoppedError	The ongoing transfer has been stopped.  This is to prevent regeneration for output operations, or to reallocate resources for input operations.");
        case(-10804) return ("earlyStopError	The transfer stopped prior to reaching the end of the transfer buffer.");
        case(-10805) return ("overRunError	The clock rate is faster than the hardware can support. An attempt to input or output a new data point was made before the hardware could finish processing the previous data point. This condition may also occur when glitches are present on an external clock signal.");
        case(-10806) return ("noTrigFoundError	No trigger value was found in the input transfer buffer.");
        case(-10807) return ("earlyTrigError	The trigger occurred before sufficient pretrigger data was acquired.");
        case(-10808) return ("LPTcommunicationError	An error occurred in the parallel port communication with the DAQ device.");
        case(-10809) return ("gateSignalError	Attempted to start a pulse width measurement with the pulse in the phase to be measured. For example, high phase for high-level gating.");
        case(-10810) return ("internalDriverError	An unexpected error occurred inside the driver when performing this given operation.");
        case(-10840) return ("softwareError	The contents or the location of the driver file was changed between accesses to the driver.");
        case(-10841) return ("firmwareError	The firmware does not support the specified operation, or the firmware operation could not complete due to a data-integrity problem.");
        case(-10842) return ("hardwareError	The hardware is not responding to the specified operation, or the response from the hardware is not consistent with the functionality of the hardware.");
        case(-10843) return ("underFlowError	Because of system and/or bus-bandwidth limitations, the driver could not write data to the device fast enough to keep up with the device throughput, and the onboard device memory reported an underflow error. This error may be returned erroneously when an overrun error has occurred.");
        case(-10844) return ("underWriteError	Your application was unable to deliver data to the background generation buffer fast enough so new data could not be delivered to the device. To prevent this error, you might increase the size of the background generation buffer, increase the amount of data you write to it per call to the write function/VI, slow down your generation rate, or reduce the number of tasks your computer is performing.");
        case(-10845) return ("overFlowError	Because of system and/or bus-bandwidth limitations, the driver could not read data from the device fast enough to keep up with the device throughput; the onboard device memory reported an overflow error.");
        case(-10846) return ("overWriteError	Your application was unable to retrieve data from the background acquisition buffer fast enough so the unretrieved data was overwritten with new data. To prevent this error, you might increase the size of the background acquisition buffer, increase the amount of data you read from it per call to the read function/VI, slow down your acquisition rate, or reduce the number of tasks your computer is performing.");
        case(-10847) return ("dmaChainingError	New buffer information was not available at the time of the DMA chaining interrupt. DMA transfers will terminate at the end of the currently active transfer buffer.");
        case(-10848) return ("noDMACountAvailError	The driver could not obtain a valid reading from the transfer-count register in the DMA controller.");
        case(-10849) return ("OpenFileError	The configuration file or DSP kernel file could not be opened.");
        case(-10850) return ("closeFileError	Unable to close a file.");
        case(-10851) return ("fileSeekError	Unable to seek within a file.");
        case(-10852) return ("readFileError	Unable to read from a file.");
        case(-10853) return ("writeFileError	Unable to write to a file.");
        case(-10854) return ("miscFileError	An error occurred accessing a file.");
        case(-10855) return ("osUnsupportedError	NI-DAQ does not support the current operation on this particular version of the operating system.");
        case(-10856) return ("osError	An unexpected error occurred from the operating system while performing the given operation.");
        case(-10857) return ("internalKernelError	An unexpected error occurred inside the kernel of the device while performing this operation.");
        case(-10858) return ("hardwareConfigChangedError	The system has reconfigured the device and has invalidated the existing configuration. The device requires reinitialization.");
        case(-10880) return ("updateRateChangeError	A change to the update rate is not possible at this time because 1) when waveform generation is in progress, you cannot change the interval timebase or 2) when you make several changes in a row, you must give each change enough time to take effect before requesting further changes.");
        case(-10881) return ("partialTransferCompleteError	You cannot do another transfer after a successful partial transfer.");
        case(-10882) return ("daqPollDataLossError	The data collected on the Remote SCXI unit was overwritten before it could be transferred to the buffer in the host. Try using a slower data acquisition rate if possible.");
        case(-10883) return ("wfmPollDataLossError	New data could not be transferred to the waveform buffer of the Remote SCXI unit to keep up with the waveform update rate. Try using a slower waveform update rate if possible.");
        case(-10884) return ("pretrigReorderError	Could not rearrange data after a pretrigger acquisition completed.");
        case(-10885) return ("overLoadError	The input signal exceeded the input range of the ADC.");
        case(-10920) return ("gpctrDataLossError	One or more data points may have been lost during buffered GPCTR operations due to speed limitations of your system.");
        case(-10940) return ("chassisResponseTimeoutError	No response was received from the Remote SCXI unit within the specified time limit.");
        case(-10941) return ("reprogrammingFailedError	Reprogramming the Remote SCXI unit was unsuccessful. Try again.");
        case(-10942) return ("invalidResetSignatureError	An invalid reset signature was sent from the host to the Remote SCXI unit.");
        case(-10943) return ("chassisLockupError	The interrupt service routine on the remote SCXI unit is taking longer than necessary. You do not need to reset your remote SCXI unit, but you must clear and restart your data acquisition..");
	}

	return ("UNKNOWN ERROR CODE");
}
