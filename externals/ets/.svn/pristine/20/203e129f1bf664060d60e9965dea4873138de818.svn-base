! + + + + + + + + + + + + + + + + + + + + + + + + + + + +  
! + + + + + + + + + + + + + + + + + + + + + + + + + + + +   
  SUBROUTINE CHANGEOCC                                      &
                      (COREPROF_IN,     COREPROF_OUT,       &
                       CORETRANSP_IN,   CORETRANSP_OUT,     &
                       CORESOURCE_IN,   CORESOURCE_OUT,     &
                       COREIMPUR_IN,    COREIMPUR_OUT,      &
                       CORENEUTRALS_IN, CORENEUTRALS_OUT,   &
                       NEOCLASSIC_IN,   NEOCLASSIC_OUT,     &
                       EQUILIBRIUM_IN,  EQUILIBRIUM_OUT,    &
                       TOROIDFIELD_IN,  TOROIDFIELD_OUT) 

! +++ Declaration of variables: 
    USE ITM_TYPES
    USE EUITM_SCHEMAS
    USE COPY_STRUCTURES


! +++ CPO derived types:
    TYPE (TYPE_COREPROF),     POINTER  :: COREPROF_IN(:)        !input CPO  
    TYPE (TYPE_COREPROF),     POINTER  :: COREPROF_OUT(:)       !output CPO  
    TYPE (TYPE_CORETRANSP),   POINTER  :: CORETRANSP_IN(:)      !input CPO  
    TYPE (TYPE_CORETRANSP),   POINTER  :: CORETRANSP_OUT(:)     !output CPO  
    TYPE (TYPE_CORESOURCE),   POINTER  :: CORESOURCE_IN(:)      !input CPO  
    TYPE (TYPE_CORESOURCE),   POINTER  :: CORESOURCE_OUT(:)     !output CPO  
    TYPE (TYPE_COREIMPUR),    POINTER  :: COREIMPUR_IN(:)       !input CPO  
    TYPE (TYPE_COREIMPUR),    POINTER  :: COREIMPUR_OUT(:)      !output CPO  
    TYPE (TYPE_CORENEUTRALS), POINTER  :: CORENEUTRALS_IN(:)    !input CPO  
    TYPE (TYPE_CORENEUTRALS), POINTER  :: CORENEUTRALS_OUT(:)   !output CPO  
    TYPE (TYPE_NEOCLASSIC),   POINTER  :: NEOCLASSIC_IN(:)      !input CPO
    TYPE (TYPE_NEOCLASSIC),   POINTER  :: NEOCLASSIC_OUT(:)     !output CPO
    TYPE (TYPE_EQUILIBRIUM),  POINTER  :: EQUILIBRIUM_IN(:)     !input CPO
    TYPE (TYPE_EQUILIBRIUM),  POINTER  :: EQUILIBRIUM_OUT(:)    !output CPO
    TYPE (TYPE_TOROIDFIELD),  POINTER  :: TOROIDFIELD_IN(:)     !input CPO
    TYPE (TYPE_TOROIDFIELD),  POINTER  :: TOROIDFIELD_OUT(:)    !output CPO

! +++ Allocate output CPOs:
!    IF(ASSOCIATED(COREPROF_OUT))     DEALLOCATE(COREPROF_OUT)
!    IF(ASSOCIATED(CORETRANSP_OUT))   DEALLOCATE(CORETRANSP_OUT)
!    IF(ASSOCIATED(CORESOURCE_OUT))   DEALLOCATE(CORESOURCE_OUT)
!    IF(ASSOCIATED(COREIMPUR_OUT))    DEALLOCATE(COREIMPUR_OUT)
!    IF(ASSOCIATED(CORENEUTRALS_OUT)) DEALLOCATE(CORENEUTRALS_OUT)
!    IF(ASSOCIATED(NEOCLASSIC_OUT))   DEALLOCATE(NEOCLASSIC_OUT)
!    IF(ASSOCIATED(EQUILIBRIUM_OUT))  DEALLOCATE(EQUILIBRIUM_OUT)
!    IF(ASSOCIATED(TOROIDFIELD_OUT))  DEALLOCATE(TOROIDFIELD_OUT)

    ALLOCATE(COREPROF_OUT(1))
    ALLOCATE(CORETRANSP_OUT(1))
    ALLOCATE(CORESOURCE_OUT(1))
    ALLOCATE(COREIMPUR_OUT(1))
    ALLOCATE(CORENEUTRALS_OUT(1))
    ALLOCATE(NEOCLASSIC_OUT(1))
    ALLOCATE(EQUILIBRIUM_OUT(1))
    ALLOCATE(TOROIDFIELD_OUT(1))

! +++ Copy input CPOs to output CPOs:

    CALL COPY_CPO      (COREPROF_IN(1),     COREPROF_OUT(1))
    CALL COPY_CPO      (CORETRANSP_IN(1),   CORETRANSP_OUT(1))
    CALL COPY_CPO      (CORESOURCE_IN(1),   CORESOURCE_OUT(1))
    CALL COPY_CPO      (COREIMPUR_IN(1),    COREIMPUR_OUT(1))
    CALL COPY_CPO      (CORENEUTRALS_IN(1), CORENEUTRALS_OUT(1))
    CALL COPY_CPO      (NEOCLASSIC_IN(1),   NEOCLASSIC_OUT(1))
    CALL COPY_CPO      (EQUILIBRIUM_IN(1),  EQUILIBRIUM_OUT(1)) 
    CALL COPY_CPO      (TOROIDFIELD_IN(1),  TOROIDFIELD_OUT(1)) 

    RETURN 

    END SUBROUTINE CHANGEOCC 
! + + + + + + + + + + + + + + + + + + + + + + + + + + + +  
! + + + + + + + + + + + + + + + + + + + + + + + + + + + +  







