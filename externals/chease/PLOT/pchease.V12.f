         PROGRAM PLCLIO
C
C  PLOT OF CLIO USING UNIRAS
C
         PARAMETER(NPT=243,NPPSI1=423,NPCHI=423,NPMGS=4)
         PARAMETER(NPS=200,NTP1=NPT+1,NSP1=NPS+1,NPISO=NPPSI1,
     ,             NPCHI1=NPCHI+1)
C
         CHARACTER*132 TEXT(1:130)
         CHARACTER*80 KCTEX,KCURVN(11)
C
         DIMENSION
     I   IBALL(NPPSI1),         IMERCI(NPPSI1),      IMERCR(NPPSI1),
     I   NMAX(NPPSI1),
     R   ZABIC(NPCHI1),         ZABIPR(NPISO+1),     ZABIS(NPPSI1+1),       
     R   ZABISG(NSP1),          ZABISI(NPPSI1+1),    ZABIT(NTP1),         
     R   ZABR (2*NPPSI1+1),     ZABS (NPPSI1),       ZABSM(NPPSI1+1),     
     R   ZCHI(NPCHI1),          ZCSIPR(NPISO+1),     ZOARS(NPPSI1),     
     R   ZOART(NTP1),           ZOBETS(NPPSI1),      ZOFR (2*NPPSI1+1),   
     R   ZOSHR(2*NPPSI1+1), ZOSHS(NPPSI1+1),   ZOJBR(2*NPPSI1+1), 
     R   ZOJBS(NPPSI1+1),   ZOJPR(2*NPPSI1+1), ZOJPS(NPPSI1+1), 
     R   ZOJBSR(2*NPPSI1+1,4),ZOJBSS(NPPSI1+1,4),  ZODIS(NPPSI1+1), 
     R   ZODRS(NPPSI1+1),   ZOBETR(2*NPPSI1+1),ZOTRR(2*NPPSI1+1),
     R   ZOTRS(NPPSI1+1),   ZODQR(2*NPPSI1+1),
     R   ZODQS(NPPSI1),         ZOHS (NPPSI1+1),     ZOIPR(2*NPPSI1+1),   
     R   ZOIPS(NPPSI1+1),       ZOJR (2*NPPSI1+1),   ZOPPR(2*NPPSI1+1),   
     R   ZOPPS(NPPSI1+1),       ZOPR (2*NPPSI1+1),   ZOPS (NPPSI1+1),     
     R   ZOQR (2*NPPSI1+1),     ZOQS (NPPSI1+1),     ZOTR(2*NPPSI1+1),    
     R   ZOTS(NPPSI1+1),        ZOTTR(2*NPPSI1+1),   ZOTTS(NPPSI1+1),     
     R   ZR(24*NPT),            ZRCHI(NPCHI1,NPPSI1),    ZRSUR(6*NPT),        
     R   ZRTET(NPT),            ZTET(NTP1),          ZTSUR(6*NPT),        
     R   ZZ(24*NPT),            ZZCHI(NPCHI1,NPPSI1),    ZZTET(NPT),          
     R   ZZSUR(6*NPT)
         DIMENSION
     R   APLACE(10),   AWIDTH(10),   BPLACE(10),   BWIDTH(10),
     R   CPLACE(10),   CWIDTH(10),   DPLACE(10),   DWIDTH(10),
     R   EPLACE(10),   EWIDTH(10)
         DIMENSION
     R   CR(NPCHI,NPPSI1),          CS(NPPSI1),
     R   CSIG(NSP1),                CZ(NPCHI,NPPSI1),
     R   RRCURV(4*NPPSI1),          RRISO(NPMGS*NTP1,NPPSI1),  
     R   RSHEAR(NPCHI,NPPSI1),      RZCURV(4*NPPSI1),
     R   RZISO(NPMGS*NTP1,NPPSI1),  ZXMB(10),
     R   ZYMB(10)
C
         DIMENSION ZRFUN(NPPSI1), ZZFUN(NPPSI1), ZYFUN(2*NPPSI1+1,10)
C
C
C  READ  DATA NECESSARY FOR PLOT ON THE FILE NUPLO
C
         NUPLO = 33
C
         OPEN(UNIT=NUPLO,ACCESS='SEQUENTIAL',FORM='FORMATTED',
     O        STATUS='OLD',FILE='NUPLO')
C
         REWIND NUPLO
C
         READ (NUPLO,1000) INSUR,NCHI,NCHI1,NPSI,NPSI1,NS,NS1,NT,NT1,
     W                     INS,INR,INBCHI,INTEXT,NCURV,NMESHA,NMESHB,
     W                     NMESHC,NMESHD,NMESHE,NPOIDA,NPOIDB,
     W                     NPOIDC,NPOIDD,NPOIDE,NISO,NMGAUS
C
         IF (NT .GT. NPT .OR. NPSI1 .GT. NPPSI1 .OR. NCHI .GT. NPCHI
     S       .OR. NS .GT. NPS .OR. NISO .GT. NPISO)
     S      STOP 'DIMENSION TOO SMALL'
C
         NISO1 = NISO + 1
C
         DO 1 J1=1,INTEXT
C
         READ (NUPLO,1002) TEXT(J1)
C
   1     CONTINUE
C
         READ(NUPLO,1001)(IBALL(J),J=1,NPSI1)
         READ(NUPLO,1001)(IMERCI(J),J=1,NPSI1)
         READ(NUPLO,1001)(IMERCR(J),J=1,NPSI1)
C
         READ(NUPLO,1003) SOLPDA,SOLPDB,SOLPDC,SOLPDD,SOLPDE,
     W                    ZRMAX,ZRMIN,ZZMAX,ZZMIN,PANGLE
         READ(NUPLO,1003)(APLACE(J),J=1,10)
         READ(NUPLO,1003)(AWIDTH(J),J=1,10)
         READ(NUPLO,1003)(BPLACE(J),J=1,10)
         READ(NUPLO,1003)(BWIDTH(J),J=1,10)
         READ(NUPLO,1003)(CPLACE(J),J=1,10)
         READ(NUPLO,1003)(CWIDTH(J),J=1,10)
         READ(NUPLO,1003)(DPLACE(J),J=1,10)
         READ(NUPLO,1003)(DWIDTH(J),J=1,10)
         READ(NUPLO,1003)(EPLACE(J),J=1,10)
         READ(NUPLO,1003)(EWIDTH(J),J=1,10)
         READ(NUPLO,1003) (ZTET(J),J=1,NT1)
         READ(NUPLO,1003) (CSIG(J),J=1,NS1)
         READ(NUPLO,1003) (CS(J),J=1,NPSI1)
         READ(NUPLO,1003) (ZCHI(J),J=1,NCHI1)
         READ(NUPLO,1003) (ZCSIPR(J),J=1,NISO1)
         READ(NUPLO,1003)(ZRTET(J),J=1,NT)
         READ(NUPLO,1003)(ZZTET(J),J=1,NT)
         READ(NUPLO,1003)(ZRSUR(J),J=1,INSUR)
         READ(NUPLO,1003)(ZTSUR(J),J=1,INSUR)
         READ(NUPLO,1003)(ZZSUR(J),J=1,INSUR)
         READ(NUPLO,1003)(ZABIS(J),J=1,INS)
         READ(NUPLO,1003)(ZABIT(J),J=1,NT1)
         READ(NUPLO,1003)(ZABIC(J),J=1,NCHI1)
         READ(NUPLO,1003)(ZOART(J),J=1,NT1)
         READ(NUPLO,1003)(ZABIPR(J),J=1,NISO+1)
         READ(NUPLO,1003)(ZABISG(J),J=1,NS1)
         READ(NUPLO,1003)(ZABSM(J),J=1,INS)
         READ(NUPLO,1003)(ZABR (J),J=1,INR)
         READ(NUPLO,1003)(ZOQS (J),J=1,INS)
         READ(NUPLO,1003)(ZOQR (J),J=1,INR)
         READ(NUPLO,1003)(ZODQS(J),J=1,INS)
         READ(NUPLO,1003)(ZODQR(J),J=1,INR)
         READ(NUPLO,1003)(ZOSHS(J),J=1,NPSI1)
         READ(NUPLO,1003)(ZOSHR(J),J=1,INR)
         READ(NUPLO,1003)(ZOJBS(J),J=1,INS)
         READ(NUPLO,1003)(ZOJBR(J),J=1,INR)
         READ(NUPLO,1003)(ZOJBSS(J,1),J=1,INS)
         READ(NUPLO,1003) (ZOJBSS(J,2),J=1,INS)
         READ(NUPLO,1003) (ZOJBSS(J,3),J=1,INS)
         READ(NUPLO,1003) (ZOJBSS(J,4),J=1,INS)
         READ(NUPLO,1003)(ZOJBSR(J,1),J=1,INR)
         READ(NUPLO,1003) (ZOJBSR(J,2),J=1,INR)
         READ(NUPLO,1003) (ZOJBSR(J,3),J=1,INR)
         READ(NUPLO,1003) (ZOJBSR(J,4),J=1,INR)
         READ(NUPLO,1003)(ZOJPS(J),J=1,INS)
         READ(NUPLO,1003)(ZOJPR(J),J=1,INR)
         READ(NUPLO,1003)(ZOTRS(J),J=1,INS)
         READ(NUPLO,1003)(ZOTRR(J),J=1,INR)
         READ(NUPLO,1003)(ZOHS(J),J=1,INS)
         READ(NUPLO,1003)(ZODIS(J),J=1,INS)
         READ(NUPLO,1003)(ZODRS(J),J=1,INS)
         READ(NUPLO,1003)(ZOPPS(J),J=1,INS)
         READ(NUPLO,1003)(ZOPPR(J),J=1,INR)
         READ(NUPLO,1003)(ZOPS (J),J=1,INS)
         READ(NUPLO,1003)(ZOPR (J),J=1,INR)
         READ(NUPLO,1003)(ZOTTS(J),J=1,INS)
         READ(NUPLO,1003)(ZOTTR(J),J=1,INR)
         READ(NUPLO,1003)(ZOTS(J) ,J=1,INS)
         READ(NUPLO,1003)(ZOTR (J),J=1,INR)
         READ(NUPLO,1003)(ZOIPS(J),J=1,INS)
         READ(NUPLO,1003)(ZOIPR(J),J=1,INR)
         READ(NUPLO,1003)(ZOBETR(J),J=1,INR)
         READ(NUPLO,1003)(ZOBETS(J),J=1,NPSI1)
         READ(NUPLO,1003)(ZOFR (J),J=1,INR)
         READ(NUPLO,1003)(ZOARS(J),J=1,NPSI1)
         READ(NUPLO,1003)(ZOJR (J),J=1,INR)
         READ(NUPLO,1003)(ZABS(J),J=1,NPSI1)
C
         DO 2 J2=1,NPSI1
C
         READ(NUPLO,1003)(RRISO(I,J2),I=1,NMGAUS*NT1)
         READ(NUPLO,1003)(RZISO(I,J2),I=1,NMGAUS*NT1)
C
  2      CONTINUE
C
         READ (NUPLO,1003)(RRCURV(J),J=1,NCURV)
         READ (NUPLO,1003)(RZCURV(J),J=1,NCURV)
         READ (NUPLO,1003)((ZRCHI(J,I),J=1,INBCHI),I=1,NPSI1)
         READ (NUPLO,1003)((ZZCHI(J,I),J=1,INBCHI),I=1,NPSI1)
         READ (NUPLO,1003)((RSHEAR(J,I),J=1,NCHI),I=1,NPSI1)
         READ (NUPLO,1003)((CR(J,I),J=1,NCHI),I=1,NPSI1)
         READ (NUPLO,1003)((CZ(J,I),J=1,NCHI),I=1,NPSI1)
C
         CLOSE(UNIT=NUPLO,STATUS='KEEP')
C
 1000    FORMAT(1X,13I8)
 1001    FORMAT((1X,40(I3)))
 1002    FORMAT(A132)
 1003    FORMAT((1X,8(1PE15.6)))
 1004    FORMAT(13I8)
C
         CPI = 4. * ATAN(1.)
C
C----------------------------------------------------------------------
C  PREPARATION
C
C  DIMENSION OF AN A4 PAGE 210*297 MM*MM
C
C
C  DEFINE THE COORDINATE OF THE MAGNETIC AXIS
C  COMPUTE THE COORDINATES OF THE SURFACE (MESH, CURVATURE LINE,
C   CHI LINES). THE SECTION MUST BE PLOT IN A BOX OF 180*180(MM*MM)
C  AND THE DISTANCE BETWEEN THE LOW-RIGHT CORNER  AND THE BOTTOM OF THE A4
C  PAGE IS 102 MM AND FROM THE RIGHT SIDE OF THE A4 PAGE IS 15 MM
C
         ZWMR = ZRMAX + ABS(ZRMIN)
         ZWMZ = ZZMAX + ABS(ZZMIN)
C
         IF (ZWMR.GT.ZWMZ) THEN
C
           ZSCA = 180. / ZWMR
           ZRM  = 15. + ZSCA * ABS(ZRMIN)
           ZZM  = 102. + (180. - ZWMZ * ZSCA) / 2.0 + ZSCA * ABS(ZZMIN)
C
         ELSE
C
           ZSCA = 180. / ZWMZ
           ZZM  = 102. + ZSCA * ABS(ZZMIN)
           ZRM  = 15. + (180. - ZWMR * ZSCA) / 2.0 + ZSCA * ABS(ZRMIN)
C
         ENDIF
C
         DO 3 J3=1,NPSI1
C
         I4MAX = 4 * NT1
C
         CALL A4SCAL(ZRM,ZZM,ZSCA,RRISO(1,J3),RZISO(1,J3),I4MAX)
         CALL A4SCAL(ZRM,ZZM,ZSCA,ZRCHI(1,J3),ZZCHI(1,J3),INBCHI)
C
         IF (J3 .LT. NPSI1) THEN
C
            CALL A4SCAL(ZRM,ZZM,ZSCA,CR(1,J3),CZ(1,J3),NCHI)
C
         ENDIF
C
         RRISO(I4MAX+1,J3) = RRISO(1,J3)
         RZISO(I4MAX+1,J3) = RZISO(1,J3)
C
         ZABISI(J3) = REAL(J3 - 1) / REAL(NPSI)
C
    3    CONTINUE
C
         CALL A4SCAL(ZRM,ZZM,ZSCA,RRCURV,RZCURV,NCURV)
         CALL A4SCAL(ZRM,ZZM,ZSCA,ZRTET,ZZTET,NT)
         CALL A4SCAL(ZRM,ZZM,ZSCA,ZRSUR,ZZSUR,INSUR)
C
         ZRSUR(INSUR+1) = ZRSUR(1)
         ZZSUR(INSUR+1) = ZZSUR(1)
C
C  COMPUTE THE MAXIMUM AND MINIMUM VALUES OF S, R, Q, PPRIME, PRESSURE,
C  TTPRIME, IPRIME, TOROIDAL CURRENT DENSITY AND POLOIDAL FLUX
C
         ZSMI  = 0.
         ZSMA  = 1.
         ZRMI  = ZABR(1)
         ZRMA  = ZABR(INR)
c%OS         IFS   = INS / 10
         IFS   = 1
C
         ZHMIN  = ZOHS(ISMIN(INS-IFS+1,ZOHS(IFS),1)+IFS-1)
         ZHMAX  = ZOHS(ISMAX(INS-IFS+1,ZOHS(IFS),1)+IFS-1)
         ZQMIN  = ZOQS(ISMIN(INS,ZOQS,1))
         ZQMAX  = ZOQS(ISMAX(INS,ZOQS,1))
         ZDQMIN = ZODQS(ISMIN(INS-IFS+1,ZODQS(IFS),1)+IFS-1)
         ZDQMAX = ZODQS(ISMAX(INS-IFS+1,ZODQS(IFS),1)+IFS-1)
         ZSHMIN = ZOSHS(ISMIN(NPSI1,ZOSHS,1))
         ZSHMAX = ZOSHS(ISMAX(NPSI1,ZOSHS,1))
         ZJBMIN = ZOJBS(ISMIN(INS,ZOJBS,1))
         ZJBMAX = ZOJBS(ISMAX(INS,ZOJBS,1))
         ZPPMIN = ZOPPS(ISMIN(INS,ZOPPS,1))
         ZPPMAX = ZOPPS(ISMAX(INS,ZOPPS,1))
         ZPMIN  = ZOPS(ISMIN(INS,ZOPS,1))
         ZPMAX  = ZOPS(ISMAX(INS,ZOPS,1))
         ZTMIN  = ZOTS(ISMIN(INS,ZOTS,1))
         ZTMAX  = ZOTS(ISMAX(INS,ZOTS,1))
         ZTRMIN = ZOTRS(ISMIN(INS,ZOTRS,1))
         ZTRMAX = ZOTRS(ISMAX(INS,ZOTRS,1))
         ZTTMIN = ZOTTS(ISMIN(INS,ZOTTS,1))
         ZTTMAX = ZOTTS(ISMAX(INS,ZOTTS,1))
         ZIPMIN = ZOIPS(ISMIN(INS,ZOIPS,1))
         ZIPMAX = ZOIPS(ISMAX(INS,ZOIPS,1))
         ZDIMIN = ZODIS(ISMIN(INS-IFS+1,ZODIS(IFS),1)+IFS-1)
         ZDIMAX = ZODIS(ISMAX(INS-IFS+1,ZODIS(IFS),1)+IFS-1)
         ZDRMIN = ZODRS(ISMIN(INS-IFS+1,ZODRS(IFS),1)+IFS-1)
         ZDRMAX = ZODRS(ISMAX(INS-IFS+1,ZODRS(IFS),1)+IFS-1)
         ZJMIN  = ZOJR(ISMIN(INR,ZOJR,1))
         ZJMAX  = ZOJR(ISMAX(INR,ZOJR,1))
         ZBMIN  = ZOBETS(ISMIN(INS,ZOBETS,1))
         ZBMAX  = ZOBETS(ISMAX(INS,ZOBETS,1))
         ZARMIN = ZOARS(ISMIN(INS,ZOARS,1))
         ZARMAX = ZOARS(ISMAX(INS,ZOARS,1))
         ZFMIN  = ZOFR(ISMIN(INR,ZOFR,1))
         ZFMAX  = ZOFR(ISMAX(INR,ZOFR,1))
         ZJPMIN = ZOJPS(ISMIN(INS,ZOJPS,1))
         ZJPMAX = ZOJPS(ISMAX(INS,ZOJPS,1))
         ZJPMIN = MIN(ZJPMIN,ZOJBSS(ISMIN(INS,ZOJBSS(1,1),1),1))
         ZJPMAX = MAX(ZJPMAX,ZOJBSS(ISMAX(INS,ZOJBSS(1,1),1),1))
         ZJPMIN = MIN(ZJPMIN,ZOJBSS(ISMIN(INS,ZOJBSS(1,2),1),2))
         ZJPMAX = MAX(ZJPMAX,ZOJBSS(ISMAX(INS,ZOJBSS(1,2),1),2))
         ZJPMIN = MIN(ZJPMIN,ZOJBSS(ISMIN(INS,ZOJBSS(1,3),1),3))
         ZJPMAX = MAX(ZJPMAX,ZOJBSS(ISMAX(INS,ZOJBSS(1,3),1),3))
         ZJPMIN = MIN(ZJPMIN,ZOJBSS(ISMIN(INS,ZOJBSS(1,4),1),4))
         ZJPMAX = MAX(ZJPMAX,ZOJBSS(ISMAX(INS,ZOJBSS(1,4),1),4))
C     
C----------------------------------------------------------------------
C  PLOTTING SECTION
C
         CALL GROUTE('SEL LDUMMY; EXIT')
C
C  OPEN UNIRAS
C
         CALL GOPEN
C
C  CREATE FIRST SEGMENT
C
         CALL GSEGCR(1)
C
C  INITIALIZATION
C
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
C
         CALL RTXHEI(3.)
         CALL RTX(-1,TEXT(4),20.,267.)
         CALL RTX(-1,TEXT(5),20.,260.)
         CALL RTX(-1,TEXT(6),20.,253.)
         CALL RTX(-1,TEXT(7),20.,246.)
C
         CALL RTX(-1,TEXT(8), 20.,236.)
         CALL RTX(-1,TEXT(9), 20.,229.)
         CALL RTX(-1,TEXT(10), 20.,222.)
         CALL RTX(-1,TEXT(11),100.,222.)
         CALL RTX(-1,TEXT(12), 20.,215.)
         CALL RTX(-1,TEXT(13),100.,215.)
         CALL RTX(-1,TEXT(14), 20.,208.)
         CALL RTX(-1,TEXT(15),100.,208.)
         CALL RTX(-1,TEXT(16), 20.,201.)
         CALL RTX(-1,TEXT(17),100.,201.)
         CALL RTX(-1,TEXT(18), 20.,194.)
         CALL RTX(-1,TEXT(19),100.,194.)
         CALL RTX(-1,TEXT(20), 20.,187.)
         CALL RTX(-1,TEXT(21),100.,187.)
C
         CALL RTX(-1,TEXT(22), 20.,177.)
         CALL RTX(-1,TEXT(23), 20.,170.)
         CALL RTX(-1,TEXT(24),100.,170.)
         CALL RTX(-1,TEXT(25), 20.,163.)
         CALL RTX(-1,TEXT(26),100.,163.)
         CALL RTX(-1,TEXT(27), 20.,156.)
         CALL RTX(-1,TEXT(28),100.,156.)
         CALL RTX(-1,TEXT(29), 20.,149.)
         CALL RTX(-1,TEXT(30), 20.,142.)
         CALL RTX(-1,TEXT(31),100.,142.)
         CALL RTX(-1,TEXT(32), 20.,135.)
         CALL RTX(-1,TEXT(33),100.,135.)
         CALL RTX(-1,TEXT(34), 20.,128.)
         CALL RTX(-1,TEXT(35),100.,128.)
         CALL RTX(-1,TEXT(37), 20.,121.)
         CALL RTX(-1,TEXT(38),100.,121.)
         CALL RTX(-1,TEXT(39), 20.,114.)
         CALL RTX(-1,TEXT(40), 20.,107.)
         CALL RTX(-1,TEXT(41), 20.,100.)
         CALL RTX(-1,TEXT(36),100.,100.)
         CALL RTX(-1,TEXT(42), 20., 93.)
         CALL RTX(-1,TEXT(121),100., 93.)
         CALL RTX(-1,TEXT(43), 20., 86.)
         CALL RTX(-1,TEXT(44),100., 86.)
         CALL RTX(-1,TEXT(45), 20., 79.)
         CALL RTX(-1,TEXT(46),100., 79.)
         CALL RTX(-1,TEXT(47), 20., 72.)
         CALL RTX(-1,TEXT(48), 20., 65.)
         CALL RTX(-1,TEXT(49),100., 65.)
         CALL RTX(-1,TEXT(50), 20., 58.)
         CALL RTX(-1,TEXT(51), 20., 51.)
         CALL RTX(-1,TEXT(52),100., 51.)
C
C
C  CLOSE SEGMENT 1
C
         CALL GSEGCL(1)
C     
C  CREATE 2ND SEGMENT     
C
         CALL GSEGCR(2)
C
C  INITIALIZATION
C
         CALL GCLEAR
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
C
C  PLOT THE SURFACE OF THE SECTION
C
         CALL GVECT(ZRSUR,ZZSUR,INSUR+1)
C
C  PLOT THE ANGLE OF THE MESH  (60 SURFACES)
C
         JST   = (NT - 1) / 60 + 1
         ZR(1) = ZRM
         ZZ(1) = ZZM
C
         DO 4 J4=1,NT,JST
C
         ZR(2) = ZRTET(J4)
         ZZ(2) = ZZTET(J4)
C
         CALL GVECT(ZR,ZZ,2)
C
   4     CONTINUE
C
C  PLOT PROFILE DEFINITION LINE
C
         ZR(1) = ZABR(1)   * COS(PANGLE)
         ZZ(1) = ZABR(1)   * SIN(PANGLE)
         ZR(2) = ZABR(INR) * COS(PANGLE)
         ZZ(2) = ZABR(INR) * SIN(PANGLE)
C
         CALL A4SCAL(ZRM,ZZM,ZSCA,ZR,ZZ,2)
         CALL GWICOL(-3.,1)
         CALL GVECT(ZR,ZZ,2)
         CALL GWICOL(-1.,1)
C
C  PLOT THE SURFACES (100 SURFACES)
C
         JST = NPSI / 100 + 1
C
         DO 6 J6=1,NPSI1,JST
C
           CALL GVECT(RRISO(1,J6),RZISO(1,J6),4*NT1+1)
C
   6     CONTINUE
C
C  PLOT THE LABELS AND THE DIFFERENT VARIABLES
C
         CALL RTXHEI(1.5)
         CALL RTX(-1,TEXT(52), 20., 95.)
         CALL RTX(-1,TEXT(53), 45., 95.)
         CALL RTX(-1,TEXT(54), 85., 95.)
         CALL RTX(-1,TEXT(55),125., 95.)
         CALL RTX(-1,TEXT(56),165., 95.)
         CALL RTX(-1,TEXT(57), 45., 92.)
         CALL RTX(-1,TEXT(58), 85., 92.)
         CALL RTX(-1,TEXT(59),125., 92.)
         CALL RTX(-1,TEXT(60), 45., 89.)
         CALL RTX(-1,TEXT(61), 85., 89.)
         CALL RTX(-1,TEXT(62),125., 89.)
         CALL RTX(-1,TEXT(63), 45., 86.)
         CALL RTX(-1,TEXT(64), 85., 86.)
         CALL RTX(-1,TEXT(65),125., 86.)
         CALL RTX(-1,TEXT(66),165., 86.)
         CALL RTX(-1,TEXT(67), 45., 83.)
         CALL RTX(-1,TEXT(68), 85., 83.)
         CALL RTX(-1,TEXT(69),125., 83.)
C
         CALL RTX(-1,TEXT(70), 45., 80.)
         CALL RTX(-1,TEXT(71), 45., 77.)
         CALL RTX(-1,TEXT(72), 45., 74.)
         CALL RTX(-1,TEXT(73), 45., 71.)
         CALL RTX(-1,TEXT(74), 45., 68.)
         CALL RTX(-1,TEXT(75), 45., 65.)
         CALL RTX(-1,TEXT(76), 45., 62.)
         CALL RTX(-1,TEXT(77), 45., 59.5)
         CALL RTX(-1,TEXT(78), 45., 57.5)
C
         CALL RTX(-1,TEXT(79), 45., 55.)
         CALL RTX(-1,TEXT(80), 85., 55.)
         CALL RTX(-1,TEXT(81),125., 55.)
         CALL RTX(-1,TEXT(82), 45., 52.)
         CALL RTX(-1,TEXT(83), 85., 52.)
         CALL RTX(-1,TEXT(84),125., 52.)
         CALL RTX(-1,TEXT(85),165., 52.)
         CALL RTX(-1,TEXT(86), 45., 49.)
         CALL RTX(-1,TEXT(87), 85., 49.)
         CALL RTX(-1,TEXT(88),125., 49.)
         CALL RTX(-1,TEXT(89),165., 49.)
C
         CALL RTX(-1,TEXT(90), 20., 45.)
         CALL RTX(-1,TEXT(91), 45., 45.)
         CALL RTX(-1,TEXT(92), 85., 45.)
         CALL RTX(-1,TEXT(93),125., 45.)
         CALL RTX(-1,TEXT(94),165., 45.)
C
         CALL RTX(-1,TEXT(95), 20., 42.)
         CALL RTX(-1,TEXT(96), 45., 42.)
         CALL RTX(-1,TEXT(97), 85., 42.)
         CALL RTX(-1,TEXT(98),125., 42.)
C
         CALL RTX(-1,TEXT(99), 20., 39.)
         CALL RTX(-1,TEXT(100), 45., 39.)
         CALL RTX(-1,TEXT(101), 85., 39.)
         CALL RTX(-1,TEXT(102),125., 39.)
C
         CALL RTX(-1,TEXT(103), 20., 36.)
         CALL RTX(-1,TEXT(104), 45., 36.)
         CALL RTX(-1,TEXT(105), 85., 36.)
         CALL RTX(-1,TEXT(106),125., 36.)
         CALL RTX(-1,TEXT(107),165., 36.)
C
         CALL RTX(-1,TEXT(108), 20., 33.)
         CALL RTX(-1,TEXT(109), 45., 33.)
         CALL RTX(-1,TEXT(110), 85., 33.)
         CALL RTX(-1,TEXT(111),125., 33.)
C
         CALL RTX(-1,TEXT(112), 20., 29.)
         CALL RTX(-1,TEXT(113), 45., 29.)
         CALL RTX(-1,TEXT(114), 85., 29.)
         CALL RTX(-1,TEXT(115),125., 29.)
         CALL RTX(-1,TEXT(116), 45., 26.)
         CALL RTX(-1,TEXT(117), 85., 26.)
         CALL RTX(-1,TEXT(118),125., 26.)
         CALL RTX(-1,TEXT(119), 45., 23.)
C
C  CLOSE SEGMENT 2
C
         CALL GSEGCL(2)
C
C  CREATE 3RD SEGMENT
C     
         CALL GSEGCR(3)
C
C  INITIALIZATION
C
         CALL GCLEAR
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
C
C  PLOT THE SURFACE OF THE SECTION
C
         CALL GVECT(ZRSUR,ZZSUR,INSUR+1)
C
C   PLOT A DOT WHERE THE LOCAL SHEARIS NEGATIVE
C   (USE ZRFUN,ZZFUN TO STORE DOTS AND PLOT LONGER ARRAY)
C
         JDOTS = 0
         DO 8 J8=1,NPSI1
         DO 7 J7=1,NCHI
C
         IF (RSHEAR(J7,J8) .LE. 0.) THEN
C
           JDOTS = JDOTS + 1
           ZRFUN(JDOTS) = CR(J7,J8)
           ZZFUN(JDOTS) = CZ(J7,J8)
           IF (JDOTS .GE. NPPSI1-1) THEN
             CALL GDOT(ZRFUN,ZZFUN,JDOTS)
             JDOTS = 0
           ENDIF
C
         ENDIF
C
  7     CONTINUE
  8     CONTINUE
        IF (JDOTS .GT. 0) CALL GDOT(ZRFUN,ZZFUN,JDOTS)
C
C  PLOT PROFILE DEFINITION LINE
C
         ZR(1) = ZABR(1)   * COS(PANGLE)
         ZZ(1) = ZABR(1)   * SIN(PANGLE)
         ZR(2) = ZABR(INR) * COS(PANGLE)
         ZZ(2) = ZABR(INR) * SIN(PANGLE)
C
         CALL A4SCAL(ZRM,ZZM,ZSCA,ZR,ZZ,2)
         CALL GWICOL(-3.,1)
         CALL GVECT(ZR,ZZ,2)
         CALL GWICOL(-1.,1)
C
C  PLOT PPRIME UNDER THE CROSS-SECTION PLOT
C
         ZRMIP = ZRM + ZSCA * ZRMI
         ZRMAP = ZRM + ZSCA * ZRMA
         ZLP   = ZRMAP - ZRMIP
C
         CALL GRAPHE(ZRMA,ZRMI,ZPPMAX,ZPPMIN,ZABR,ZOPPR,INR,ZRMIP,45.,
     S   ZLP,48.,'DIST. FROM MAG. AXIS$',         '$','PPRIME$',0,0)
C
C  PLOT REGION THAT ARE BALLOONING AND MERCIER UNSTABLE
C
         ZYMB(1) = 15.
         ZYMB(2) = 15.
         ZYMB(3) = 18.
         ZYMB(4) = 18.
         ZYMB(5) = 15.
         ZXMB(1) = ZRMIP
         ZXMB(2) = ZRMAP
         ZXMB(3) = ZRMAP
         ZXMB(4) = ZRMIP
         ZXMB(5) = ZRMIP
         CALL GVECT(ZXMB,ZYMB,5)
         ZYMB(1) = 27.
         ZYMB(2) = 27.
         ZYMB(3) = 30.
         ZYMB(4) = 30.
         ZYMB(5) = 27.
         CALL GVECT(ZXMB,ZYMB,5)
         ZYMB(1) =  3.
         ZYMB(2) =  3.
         ZYMB(3) =  6.
         ZYMB(4) =  6.
         ZYMB(5) =  3.
         ZXMB(1) = ZRMIP
         ZXMB(2) = ZRMAP
         ZXMB(3) = ZRMAP
         ZXMB(4) = ZRMIP
         ZXMB(5) = ZRMIP
C
         CALL GVECT(ZXMB,ZYMB,5)
         CALL RTXHEI(3.)
         CALL RTX(-1,'BALLOONING STABILITY$',ZRMIP+10.,32.)
         CALL RTX(-1,'MERCIER STABILITY$',ZRMIP+10.,20.)
         CALL RTX(-1,'RESISTIVE INTERCHANGE CRITERION$',ZRMIP+10.,8.)
C
         ZYMB(1) = 27.
         ZYMB(2) = 30.
         ZYMB(3) = 15.
         ZYMB(4) = 18.
         ZYMB(5) =  3.
         ZYMB(6) =  6.
C
         DO 9 J9 = 1,NPSI
C
         IF (J9 .EQ. NPSI) THEN
C
           ZXMB(1) = ZRM+ZSCA*ZABR(1)
           ZXMB(2) = ZRM+ZSCA*(ZABR(2)+ZABR(3))/2.0
           ZXMB(3) = ZXMB(2)
           ZXMB(4) = ZXMB(1)
           ZXMB(5) = ZXMB(1)
           ZXMB(6) = ZRM+ZSCA*(ZABR(INR-1)+ZABR(INR-2))/2.0
           ZXMB(7) = ZRM+ZSCA*ZABR(INR)
           ZXMB(8) = ZXMB(7)
           ZXMB(9) = ZXMB(6)
           ZXMB(10) = ZXMB(6)
C
         ELSE IF (J9 .EQ. 1) THEN
C
           ZXMB(1) = ZRM+ZSCA*(ZABR(NPSI)+ZABR(NPSI+1))/2.0
           ZXMB(2) = ZRM+ZSCA*ZABR(NPSI+2)
           ZXMB(3) = ZXMB(2)
           ZXMB(4) = ZXMB(1)
           ZXMB(5) = ZXMB(1)
           ZXMB(6) = ZRM+ZSCA*ZABR(NPSI+2)
           ZXMB(7) = ZRM+ZSCA*(ZABR(NPSI+3)+ZABR(NPSI+4))/2.0
           ZXMB(8) = ZXMB(7)
           ZXMB(9) = ZXMB(6)
           ZXMB(10) = ZXMB(6)
C
         ELSE
C
           ZXMB(1) = ZRM+ZSCA*(ZABR(NPSI+1-J9)+ZABR(NPSI+2-J9))/2.0
           ZXMB(2) = ZRM+ZSCA*(ZABR(NPSI+3-J9)+ZABR(NPSI+2-J9))/2.0
           ZXMB(3) = ZXMB(2)
           ZXMB(4) = ZXMB(1)
           ZXMB(5) = ZXMB(1)
           ZXMB(6) = ZRM+ZSCA*(ZABR(NPSI+1+J9)+ZABR(NPSI+2+J9))/2.0
           ZXMB(7) = ZRM+ZSCA*(ZABR(NPSI+3+J9)+ZABR(NPSI+2+J9))/2.0
           ZXMB(8) = ZXMB(7)
           ZXMB(9) = ZXMB(6)
           ZXMB(10) = ZXMB(6)
C
         ENDIF
C
         IF (IBALL(J9) .NE. 0) THEN
C
            CALL RRECT(ZXMB(1),ZYMB(1),ZXMB(3),ZYMB(2),1,0)
            CALL RRECT(ZXMB(6),ZYMB(1),ZXMB(8),ZYMB(2),1,0)
C
         ENDIF
C
         IF (IMERCI(J9) .NE. 0) THEN
C
            CALL RRECT(ZXMB(1),ZYMB(3),ZXMB(3),ZYMB(4),1,0)
            CALL RRECT(ZXMB(6),ZYMB(3),ZXMB(8),ZYMB(4),1,0)
C
         ENDIF
C
         IF (IMERCR(J9) .NE. 0) THEN
C
            CALL RRECT(ZXMB(1),ZYMB(5),ZXMB(3),ZYMB(6),1,0)
            CALL RRECT(ZXMB(6),ZYMB(5),ZXMB(8),ZYMB(6),1,0)
C
         ENDIF
C
   9     CONTINUE
C
C  PLOT THE CHI LINES
C
         DO 11 J11 = 1,INBCHI
C
         DO 10 J10 = 1,NPSI1
C
           ZRFUN(J10) = ZRCHI(J11,J10)
           ZZFUN(J10) = ZZCHI(J11,J10)
C
  10     CONTINUE
         CALL GVECT(ZRFUN,ZZFUN,NPSI1)
  11     CONTINUE
C
C  PLOT THE ZERO CURVATURE LINE
C
         CALL GWICOL(-5.,1)
         CALL GDOT(RRCURV,RZCURV,NCURV)
         CALL GWICOL(-1.,1)
C
C  CLOSE SEGMENT 3
C
         CALL GSEGCL(3)
C
C  CREATE 4TH  SEGMENT
C     
         CALL GSEGCR(4)
C
C  INITIALIZATION
C
         CALL GCLEAR
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
         CALL D6SEC
C
C  PLOT PRESSURE-PROFILE VERSUS S
C
         CALL RTEXT2(' PMIN=  ',ZPMIN,' PMAX=  ',ZPMAX,KCTEX)
         CALL RTXHEI(2.)
         CALL RTX(-1,KCTEX, 35.,277.)
         CALL GRAPHE(ZSMA,ZSMI,ZPMAX,ZPMIN,ZABSM,ZOPS,INS, 30.,202.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$',         '$','PRESSURE$',1,1)
C
C  PLOT PRESSURE-PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZPMAX,ZPMIN,ZABR,ZOPR,INR,120.,202.,
     S   63.,63.,'DIST. FROM MAG. AXIS$',         '$','PRESSURE$',1,1)
C
C  PLOT MINIMUM AND MAXIMUM VALUES OF R
C
         CALL RTEXT2(' RMIN=  ',ZRMI,' RMAX=  ',ZRMA,KCTEX)
         CALL RTX(-1,KCTEX,125.,277.)
C
C  PLOT PPRIME-PROFILE VERSUS S
C
         CALL RTEXT2(' PPMIN= ',ZPPMIN,' PPMAX= ',ZPPMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,187.)
         CALL GRAPHE(ZSMA,ZSMI,ZPPMAX,ZPPMIN,ZABSM,ZOPPS,INS,30.,112.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$',         '$','PPRIME$',1,1)
C
C  PLOT PPRIME-PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZPPMAX,ZPPMIN,ZABR,ZOPPR,INR,120.,112.,
     S   63.,63.,'DIST. FROM MAG. AXIS$',         '$','PPRIME$',1,1)
C
C  PLOT  IPRIME-PROFILE
C
         CALL RTEXT2(' IPMIN= ',ZIPMIN,' IPMAX= ',ZIPMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35., 97.)
         CALL GRAPHE(ZSMA,ZSMI,ZIPMAX,ZIPMIN,ZABSM,ZOIPS,INS, 30., 22.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$',         '$','IPRIME$',1,1)
C
C  PLOT  IPRIME-PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZIPMAX,ZIPMIN,ZABR,ZOIPR,INR,120., 22.,
     S   63.,63.,'DIST. FROM MAG. AXIS$',         '$','IPRIME$',1,1)
C
C  CLOSE SEGMENT 4
C
         CALL GSEGCL(4)
C
C  CREATE 5TH SEGMENT
C
         CALL GSEGCR(5)
C
C  INITIALIZATION
C
         CALL GCLEAR
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
         CALL D6SEC
C
C  PLOT <J.B>/<B.GRAD-PHI> PROFILE VERSUS S
C
         CALL RTXHEI(2.)
         CALL RTEXT2('J.BMIN= ',ZJBMIN,'J.BMAX= ',ZJBMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,277.)
         CALL GRAPHE(ZSMA,ZSMI,ZJBMAX,ZJBMIN,ZABSM,ZOJBS,INS, 30.,202.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$','$','J.B/B.grad(Phi)$',1,1)
C
C  PLOT <J.B>/<B.GRAD-PHI> PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZJBMAX,ZJBMIN,ZABR,ZOJBR,INR,120.,202.,
     S   63.,63.,'DIST. FROM MAG. AXIS$','$','J.B/B.grad(Phi)$',1,1)
C
C  PLOT MINIMUM AND MAXIMUM VALUES OF R
C
         CALL RTEXT2(' RMIN=  ',ZRMI,' RMAX=  ',ZRMA,KCTEX)
         CALL RTX(-1,KCTEX,125.,277.)
C
C  PLOT T-PROFILE VERSUS S
C
         CALL RTXHEI(2.)
         CALL RTEXT2(' TMIN=  ',ZTMIN,' TMAX=  ',ZTMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,187.)
         CALL GRAPHE(ZSMA,ZSMI,ZTMAX,ZTMIN,ZABSM,ZOTS,INS, 30.,112.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$','$','TOROIDAL FLUX$',1,1)
C
C  PLOT T-PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZTMAX,ZTMIN,ZABR,ZOTR,INR,120.,112.,
     S   63.,63.,'DIST. FROM MAG. AXIS$','$','TOROIDAL FLUX$',1,1)
C
C  PLOT MINIMUM AND MAXIMUM VALUES OF R
C
         CALL RTEXT2(' RMIN=  ',ZRMI,' RMAX=  ',ZRMA,KCTEX)
         CALL RTX(-1,KCTEX,125.,187.)
C
C  PLOT TTPRIME-PROFILE VERSUS S
C
         CALL RTEXT2(' TTMIN= ',ZTTMIN,' TTMAX= ',ZTTMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,97.)
         CALL GRAPHE(ZSMA,ZSMI,ZTTMAX,ZTTMIN,ZABSM,ZOTTS,INS, 30.,22.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$',         '$','TTPRIME$',1,1)
C
C  PLOT TTPRIME-PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZTTMAX,ZTTMIN,ZABR,ZOTTR,INR,120.,22.,
     S   63.,63.,'DIST. FROM MAG. AXIS$',         '$','TTPRIME$',1,1)
C
C  CLOSE SEGMENT 5
C
         CALL GSEGCL(5)
C
C  CREATE 6TH SEGMENT
C
         CALL GSEGCR(6)
C
C  INITIALIZATION
C
         CALL GCLEAR
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
         CALL D6SEC
C
C  PLOT Q-PROFILE VERSUS S
C
         CALL RTXHEI(2.)
         CALL RTEXT2(' QMIN=  ',ZQMIN,' QMAX=  ',ZQMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,277.)
         CALL GRAPHE(ZSMA,ZSMI,ZQMAX,ZQMIN,ZABSM,ZOQS,INS, 30.,202.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$','$','Q$',1,1)
C
C  PLOT Q-PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZQMAX,ZQMIN,ZABR,ZOQR,INR,120.,202.,
     S   63.,63.,'DIST. FROM MAG. AXIS$','$','Q$',1,1)
C
C  PLOT MINIMUM AND MAXIMUM VALUES OF R
C
         CALL RTEXT2(' RMIN=  ',ZRMI,' RMAX=  ',ZRMA,KCTEX)
         CALL RTX(-1,KCTEX,125.,277.)
C
C  PLOT Q'-PROFILE VERSUS S
C
         CALL RTXHEI(2.)
         CALL RTEXT2('QPMIN=  ',ZDQMIN,'QPMAX=  ',ZDQMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,187.)
         CALL GRAPHE(ZSMA,ZSMI,ZDQMAX,ZDQMIN,ZABSM,ZODQS,INS, 30.,112.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$','$','Q-PRIME$',1,1)
C
C  PLOT Q'-PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZDQMAX,ZDQMIN,ZABR,ZODQR,INR,120.,112.,
     S   63.,63.,'DIST. FROM MAG. AXIS$','$','Q-PRIME$',1,1)
C
C  PLOT SHEAR VERSUS S
C
         CALL RTEXT2(' SHMIN= ',ZSHMIN,' SHMAX= ',ZSHMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,97.)
         CALL GRAPHE(ZSMA,ZSMI,ZSHMAX,ZSHMIN,ZABS,ZOSHS,NPSI1,30.,22.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$','$','SHEAR$',1,1)
C
C  PLOT SHEAR VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZSHMAX,ZSHMIN,ZABR,ZOSHR,INR,120.,22.,
     S   63.,63.,'DIST. FROM MAG. AXIS$','$','SHEAR$',1,1)
C
C  CLOSE SEGMENT 6
C
         CALL GSEGCL(6)
C
C  CREATE 7TH SEGMENT
C
         CALL GSEGCR(7)
C
C  INITIALIZATION
C
         CALL GCLEAR
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
         CALL D6SEC
C
C  PLOT POLOIDAL BETA VERSUS S
C
         CALL RTXHEI(2.)
         CALL RTEXT2('BETAMIN=',ZBMIN,'BETAMAX=',ZBMAX,KCTEX)
         CALL RTX(-1,KCTEX, 30.,277.)
         CALL GRAPHE(ZSMA,ZSMI,ZBMAX,ZBMIN,ZABS,ZOBETS,NPSI1,30.,202.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$','$','POLOIDAL BETA$',1,1)
C
C  PLOT POLOIDAL BETA VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZBMAX,ZBMIN,ZABR,ZOBETR,INR,120.,202.,
     S   63.,63.,'DIST. FROM MAG. AXIS$','$','POLOIDAL BETA$',1,1)
C
C  PLOT MINIMUM AND MAXIMUM VALUES OF R
C
         CALL RTEXT2(' RMIN=  ',ZRMI,' RMAX=  ',ZRMA,KCTEX)
         CALL RTX(-1,KCTEX,125.,277.)
C
C  PLOT MERCIER COEFFICIENT -DI VERSUS S
C
         CALL RTEXT2(' DIMIN=  ',ZDIMIN,' DIMAX=  ',ZDIMAX,KCTEX)
         CALL RTX(-1,KCTEX,30.,187.)
C     
         CALL GRAPHE(ZSMA,ZSMI,ZDIMAX,ZDIMIN,ZABSM,ZODIS,INS, 30.,112.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$','$','- Di$',1,1)
C
C  H OF GLASSER, GREENE AND JOHNSON
C
         CALL RTEXT2(' HMIN=  ',ZHMIN,' HMAX=  ',ZHMAX,KCTEX)
         CALL RTX(-1,KCTEX,125.,187.)
C
         CALL GRAPHE(ZSMA,ZSMI,ZHMAX,ZHMIN,ZABSM,ZOHS,INS,120.,112.,
     S    63.,63.,'S=SQRT(PSI/PSISURF)$','$','H OF G.G.J.$',1,1)
C
C  PLOT RESISTIVE INTERCHANGE COEFFICIENT -DR VERSUS S
C
         CALL RTEXT2(' DRMIN=  ',ZDRMIN,' DRMAX=  ',ZDRMAX,KCTEX)
         CALL RTX(-1,KCTEX,30.,97.)
C
         CALL GRAPHE(ZSMA,ZSMI,ZDRMAX,ZDRMIN,ZABSM,ZODRS,INS, 30.,22.,
     S        63.,63.,'S=SQRT(PSI/PSISURF)$','$','- Dr$',1,1)
C
C  PLOT POLOIDAL FLUX VERSUS S
C
         CALL RTEXT2(' PSIMIN=',ZFMIN,' PSIMAX=',ZFMAX,KCTEX)
         CALL RTX(-1,KCTEX,125., 97.)
         CALL GRAPHE(ZRMA,ZRMI,ZFMAX,ZFMIN,ZABR,ZOFR,INR,120.,22.,
     S   63.,63.,'DIST. FROM MAG. AXIS$','$','POLOIDAL FLUX$',1,1)
C
C  CLOSE SEGMENT 7
C
         CALL GSEGCL(7)
C
C  CREATE 8TH SEGMENT
C
         CALL GSEGCR(8)
C
C  INITIALIZATION
C
         CALL GCLEAR
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
         CALL D6SEC
C
C  PLOT <J.B-TOT>&<J.B-B.S.>-PROFILES VERSUS S
C
         CALL RTXHEI(2.)
         CALL RTEXT2(' JPMIN=  ',ZJPMIN,' JPMAX=  ',ZJPMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,277.)
         DO I=1,INS
           ZYFUN(I,1) = ZOJPS(I)
           ZYFUN(I,2) = ZOJBSS(I,1)
           IF (INTEXT .GE. 120) THEN
             ZYFUN(I,3) = ZOJBSS(I,2)
             ZYFUN(I,4) = ZOJBSS(I,3)
             ZYFUN(I,5) = ZOJBSS(I,4)
           ENDIF
         ENDDO
         KCURVN(1) = 'J.B-TOT$'
         KCURVN(2) = 'JBS(0,ne)$'
         KCURVN(3) = 'JBS(NUE*,ne)$'
         KCURVN(4) = 'JBS(NU,p_equi,ne,Te)$'
         KCURVN(5) = 'JBS(NU,p_equi,Te)$'
         IPLOT = 2
         IF (INTEXT .GE. 120) IPLOT = 4
         KCURVN(IPLOT+1) = 'J.B-TOT AND J.B-B.S.$'
C
         CALL GRAPHEN(ZSMA,ZSMI,ZJPMAX,ZJPMIN,ZABSM,ZYFUN,2*NPPSI1+1,
     +     INS,IPLOT, 30.,202.,63.,63.,'S=SQRT(PSI/PSISURF)$','$',
     +     KCURVN,1,1)
C
C  PLOT <J.B-TOT>&<J.B-B.S.>-PROFILES VERSUS R
C
         DO I=1,INR
           ZYFUN(I,1) = ZOJPR(I)
           ZYFUN(I,2) = ZOJBSR(I,1)
           IF (INTEXT .GE. 120) THEN
             ZYFUN(I,3) = ZOJBSR(I,2)
             ZYFUN(I,4) = ZOJBSR(I,3)
             ZYFUN(I,4) = ZOJBSR(I,4)
           ENDIF
         ENDDO
         KCURVN(1) = 'J.B-TOT$'
         KCURVN(2) = 'JBS(0,ne)$'
         KCURVN(3) = 'JBS(NUE*,ne)$'
         KCURVN(4) = 'JBS(NU,p_equi,ne,Te)$'
         KCURVN(5) = 'JBS(NU,p_equi,Te)$'
         IPLOT = 2
         IF (INTEXT .GE. 120) IPLOT = 4
         KCURVN(IPLOT+1) = 'J.B-TOT AND J.B-B.S.$'
C
         CALL GRAPHEN(ZRMA,ZRMI,ZJPMAX,ZJPMIN,ZABR,ZYFUN,2*NPPSI1+1,
     +     INR,IPLOT,120.,202.,63.,63.,'DIST. FROM MAG. AXIS$','$',
     +     KCURVN,1,1)
C
C  PLOT MINIMUM AND MAXIMUM VALUES OF R
C
         CALL RTEXT2(' RMIN=  ',ZRMI,' RMAX=  ',ZRMA,KCTEX)
         CALL RTX(-1,KCTEX,125.,277.)
C
C  PLOT TRAPPED PARTICLE PROFILE VERSUS S
C
         CALL RTXHEI(2.)
         CALL RTEXT2('TRMIN=  ',ZTRMIN,'TRMAX=  ',ZTRMAX,KCTEX)
         CALL RTX(-1,KCTEX, 35.,187.)
         CALL GRAPHE(ZSMA,ZSMI,ZTRMAX,ZTRMIN,ZABSM,ZOTRS,INS, 30.,112.,
     S   63.,63.,'S=SQRT(PSI/PSISURF)$','$','TRAPPED PART.(HIRSHMAN)$',
     S   1,1)
C
C  PLOT TRAPPED PARTICLE PROFILE VERSUS R
C
         CALL GRAPHE(ZRMA,ZRMI,ZTRMAX,ZTRMIN,ZABR,ZOTRR,INR,120.,112.,
     S   63.,63.,'DIST. FROM MAG. AXIS$','$','TRAPPED PART.(HIRSHMAN)$',
     S   1,1)
C
C  PLOT SQRT(VOLUME OF FLUX TUBE) VERSUS S
C
         CALL GRAPHE(ZSMA,ZSMI,ZARMAX,ZARMIN,ZABISI,ZOARS,NPSI1, 
     S    30., 22.,63.,63.,'(S SURFACE INDEX) / NPSI$','$',
     S   'SQRT(FLUX TUBE VOLUME)$',1,1)
C
C PLOT TOROIDAL CURRENT DENSITY VERSUS R
C
         CALL RTEXT2(' JMIN=  ',ZJMIN,' JMAX=  ',ZJMAX,KCTEX)
         CALL RTX(-1,KCTEX,125., 97.)
         CALL GRAPHE(ZRMA,ZRMI,ZJMAX,ZJMIN,ZABR,ZOJR,INR,120., 22.,
     S 63.,63.,'DIST. FROM MAG. AXIS$','$','TOR. CURRENT DENSITY$',1,1)
C
C
C  CLOSE SEGMENT 8
C
         CALL GSEGCL(8)
C
C  CREATE 9TH SEGMENT
C
         CALL GSEGCR(9)
C
C  INITIALIZATION
C
         CALL GCLEAR
         CALL GLIMIT(0.,210.,0.,297.,0.,0.)
         CALL GWBOX(210.,297.,0.)
         CALL GVPORT(0.,0.,210.,297.)
         CALL DRWA4(TEXT(1))
C
         Z2PI = 8 * ATAN(1.)
C
C PLOT SIGMA-PACKING
C
         CALL RTXHEI(1.5)
C      
         CALL RTEXT1(5,'CPLACE=',CPLACE(1),KCTEX)
         CALL RTX(-1,KCTEX, 17.,276.)
         CALL RTEXT1(5,'       ',CPLACE(6),KCTEX)
         CALL RTX(-1,KCTEX, 17.,274.)
         CALL RTEXT1(5,'CWIDTH=',CWIDTH(1),KCTEX)
         CALL RTX(-1,KCTEX, 17.,271.)
         CALL RTEXT1(5,'       ',CWIDTH(6),KCTEX)
         CALL RTX(-1,KCTEX, 17.,269.)
C
         CALL GRAPHE(1.,0.,1.,0.,ZABISG,CSIG,NS1, 30.,202.,63.,63.,
     S   '(SIGMA INDEX) / NS$','SIGMA PACKING$','$',1,1)
C
C PLOT CSIPR-PACKING
C
         CALL RTEXT1(5,'BPLACE=',BPLACE(1),KCTEX)
         CALL RTX(-1,KCTEX,107.,276.)
         CALL RTEXT1(5,'       ',BPLACE(6),KCTEX)
         CALL RTX(-1,KCTEX,107.,274.)
         CALL RTEXT1(5,'BWIDTH=',BWIDTH(1),KCTEX)
         CALL RTX(-1,KCTEX,107.,271.)
         CALL RTEXT1(5,'       ',BWIDTH(6),KCTEX)
         CALL RTX(-1,KCTEX,107.,269.)
C
         CALL GRAPHE(1.,0.,1.,0.,ZABIPR,ZCSIPR,NISO1,120.,202.,63.,63.
     S   ,'(CSIPR INDEX) / NISO$','CSIPR PACKING$','$',1,1)
C
C PLOT CS-PACKING
C
         CALL RTEXT1(5,'APLACE=',APLACE(1),KCTEX)
         CALL RTX(-1,KCTEX, 17.,186.)
         CALL RTEXT1(5,'       ',APLACE(6),KCTEX)
         CALL RTX(-1,KCTEX, 17.,184.)
         CALL RTEXT1(5,'AWIDTH=',AWIDTH(1),KCTEX)
         CALL RTX(-1,KCTEX, 17.,181.)
         CALL RTEXT1(5,'       ',AWIDTH(6),KCTEX)
         CALL RTX(-1,KCTEX, 17.,179.)
C
         CALL GRAPHE(1.,0.,1.,0.,ZABIS,CS,NPSI1, 30.,112.,63.,63.
     S   ,'(CS INDEX) / NPSI$','CS PACKING$','$',1,1)
C
C PLOT CHI-PACKING
C
         CALL RTEXT1(5,'EPLACE=',EPLACE(1),KCTEX)
         CALL RTX(-1,KCTEX,107.,186.)
         CALL RTEXT1(5,'       ',EPLACE(6),KCTEX)
         CALL RTX(-1,KCTEX,107.,184.)
         CALL RTEXT1(5,'EWIDTH=',EWIDTH(1),KCTEX)
         CALL RTX(-1,KCTEX,107.,181.)
         CALL RTEXT1(5,'       ',EWIDTH(6),KCTEX)
         CALL RTX(-1,KCTEX,107.,179.)
C
         CALL GRAPHE(1.,0.,Z2PI,0.,ZABIC,ZCHI,NCHI1,120.,112.,63.,63.
     S   ,'(CHI INDEX) / NCHI$','CHI PACKING$','$',1,1)
C
C PLOT THETA-PACKING
C
         CALL RTEXT1(5,'DPLACE=',DPLACE(1),KCTEX)
         CALL RTX(-1,KCTEX, 17., 96.)
         CALL RTEXT1(5,'       ',DPLACE(6),KCTEX)
         CALL RTX(-1,KCTEX, 17., 94.)
         CALL RTEXT1(5,'DWIDTH=',DWIDTH(1),KCTEX)
         CALL RTX(-1,KCTEX, 17., 91.)
         CALL RTEXT1(5,'       ',DWIDTH(6),KCTEX)
         CALL RTX(-1,KCTEX, 17., 89.)
C
         CALL GRAPHE(1.,0.,Z2PI,0.,ZABIT,ZTET,NT1, 30., 22.,63.,63.
     S   ,'(THETA INDEX) / NT$','THETA PACKING$','$',1,1)
C
C PLOT THETA-SURFACE
C
         CALL RTXHEI(2.)
         CALL RTEXT2(' ARMIN= ',ZOART(1),' ARMAX= ',ZOART(NT1),KCTEX)
         CALL RTX(-1,KCTEX,125., 97.)
C 
         CALL GRAPHE(1.,0.,ZOART(NT1),0.,ZABIT,ZOART,NT1,120., 22.,63.,
     S   63.,'(THETA INDEX) / NT$','$','FLUX(THETA) - FLUX(0)$',1,1)
C
C
C  CLOSE SEGMENT 9
C
         CALL GSEGCL(9)
C
C  CLOSE UNIRAS
C
         CALL GCLOSE
C
         STOP 'NORMAL END OF PLCLIO'
         END
c%OS
c%OS
c%OS        SUBROUTINE GRAPHE2(PXMAX,PXMIN,PYMAX1,PYMIN1,PX,PY,KN,PXOR,PYOR,
c%OS     S   PXLE,PYLE,KCTX,KCTY,KTITL,KROX,KROY)
c%OSC
c%OSC  KROX = 0 FIRST VALUE OF THE X-AXIS IS NOT A ROUNDED VALUE
c%OSC         1 FIRST VALUE OF THE X-AXIS IS A ROUNDED VALUE
c%OSC  KROY   SAME BUT FOR THE Y AXIS
c%OSC
c%OS         DIMENSION PX(KN),PY(KN)
c%OS         CHARACTER*80 KCTX,KCTY,KTITL
c%OSC
c%OSC------------------------------------------------------------------------
c%OSC  TEST AND CORRECT SOME INPUT VALUES
c%OSC
c%OSC  MAKE SHURE THAT PYMAX AND PYMIN ARE DIFFERENT
c%OSC     
c%OS         PYMIN = PYMIN1
c%OS         PYMAX = PYMAX1
c%OS         IF (PYMAX.EQ.PYMIN.AND.PYMIN.EQ.0.0) PYMAX = 0.99
c%OS         IF (PYMAX.EQ.PYMIN.AND.PYMIN.NE.0.0) THEN
c%OS           IF (PYMIN.LT.0.0) PYMAX = 0.0
c%OS           IF (PYMIN.GT.0.0) PYMIN = 0.0
c%OS         ENDIF
c%OSC        IF (PYMAX.GE.0.0.AND.PYMIN.GE.0.0) PYMIN = PYMIN-1.0E-10
c%OSC        IF (PYMAX.LE.0.0.AND.PYMIN.LT.0.0) PYMIN = PYMIN-1.0E-10
c%OSC
c%OSC------------------------------------------------------------------------
c%OSC  DEFINITION SECTION
c%OSC
c%OSC  DEFINE THE THICKNESS OF THE LINE OF THE FUNCTION THAT IS PLOTTED
c%OSC  (POSITIVE ----> IN MM)
c%OSC  (NEGATIVE ----> IN PIXELS UNIT)
c%OSC
c%OS         ZLIW = -2.
c%OSC
c%OSC  DEFINE THE THICKNESS OF THE LINE OF THE FRAME
c%OSC  (POSITIVE ----> IN MM)
c%OSC  (NEGATIVE ----> IN PIXELS UNIT)
c%OSC
c%OS         ZFRAW = -2.
c%OSC
c%OSC  TEXT HEIGHT OF THE TITLE OF THE AXIS
c%OSC
c%OS         ZAXHET = 2.
c%OSC
c%OSC  TEXT HEIGHT OF THE NUMBER LABELLING THE AXIS
c%OSC
c%OS         ZAXHEN = 2.
c%OSC
c%OSC  NUMBER OF DIGITS AFTER THE DECIMAL POINT IN THE NUMBERS PLOTTED WITH
c%OSC  THE AXIS
c%OSC
c%OS         IDECX = 2
c%OS         IDECY = 2
c%OSC
c%OSC  APPROXIMATIVE NUMBER OF VALUE THAT ARE PLOTTED ALONG THE AXIS
c%OSC
c%OS         INUX = 5
c%OS         INUY = 5
c%OSC
c%OSC  DEFINE THE GRIDING
c%OSC  IGRIX > 0 VERTICAL GRID LINES WILL BE PLOTTED AT EVERY IX'TH VALUE
c%OSC            ALONG THE X-AXIS
c%OSC  IGRIX = 0 NO VERTICAL GRID LINES
c%OSC  IGRIX < 0 (IX-1) GRID LINES ARE PLOTTED BETWEEN EVERY IX'TH VALUE
c%OSC            ALONG THE X-AXIS
c%OSC  IGRIY : SAME BUT FOR THE Y-AXIS
c%OSC
c%OS         IGRIX = 1
c%OS         IGRIY = 1
c%OSC
c%OSC  SPECIFY THE THICKNESS OF THE GRID LINES (<0  IN PIXEL , >0 IN MM)
c%OSC
c%OS         ZGRITH = -1
c%OSC
c%OSC  SPECIFY THE LINE STYLE OF THE GRID (SEE PAGE 6.20 OF MANUAL BIZPAK)
c%OSC
c%OS         IGRITY = 3
c%OSC
c%OSC  SPECIFY THE TYPE OF THE THICKS OF THE AXIS
c%OSC  ITICX = 0 ---> THE TICKS ARE ON THE SAME SIDE OF THE LINE AS THE TEXT
c%OSC  ITICX = 1 ---> THE TICKS ARE ON BOTH SIDE OF THE LINE
c%OSC  ITICX = 2 ---> THE TICKS ARE ON THE OTHER SIDE OF THE LINE AS THE TEXT
c%OSC
c%OS         ITICX = 2
c%OS         ITICY = 2
c%OSC
c%OSC  SET UP THE HEIGTH OF THE CHARACTER OF THE TITLE OF THE GRAPH
c%OSC  AND THE NUMBER OF LINE OF THE TITLE
c%OSC
c%OS         ZHTI = 4.0
c%OS         INLTI = 1
c%OSC
c%OSC  EXPONENT OF THE X VALUES
c%OSC
c%OS         ZIM  = LOG10(ABS(PXMIN)+1.0E-14)
c%OS         ZIMM = LOG10(ABS(PXMAX)+1.0E-14)
c%OS         IF (ZIMM.GT.ZIM) ZIM = ZIMM
c%OS         IX = INT(ZIM)
c%OSC
c%OSC  EXPONENT OF THE Y VALUES
c%OSC
c%OS         ZIM  = LOG10(ABS(PYMIN)+1.0E-14)
c%OS         ZIMM = LOG10(ABS(PYMAX)+1.0E-14)
c%OS         IF (ZIMM.GT.ZIM) ZIM = ZIMM
c%OS         IY = INT(ZIM)
c%OSC
c%OSC------------------------------------------------------------------------
c%OSC  BEGINNING OF THE PLOTTING SECTION
c%OSC
c%OSC  DEFINE THE GRAF TRANSFORMATION AND POSITION
c%OSC
c%OS         CALL BGRAF(PXOR,PYOR,PXLE,PYLE)
c%OSC
c%OSC  PLOT X AXIS
c%OSC
c%OS         CALL BAXANG(0)
c%OS         CALL BAXLAB(ZAXHET,ZAXHEN,IDECX ,IX)
c%OS         CALL BTICKJ(ITICX)
c%OS         IF (KROX.EQ.0) THEN
c%OS           ZMI = PXMIN
c%OS           ZMA = PXMAX
c%OS         ELSE
c%OS           CALL BSCLIN(1,PXMIN,PXMAX,ZMI,ZMA,NST)
c%OS         ENDIF
c%OS         CALL BAXIS(1,ZMI,(ZMA-ZMI)/INUX,ZMA,KCTX)
c%OSC
c%OSC  PLOT Y AXIS
c%OSC
c%OS         CALL BAXLAB(ZAXHET,ZAXHEN,IDECY,IY)
c%OS         CALL BTICKJ(ITICX)
c%OS         IF (KROY.EQ.0) THEN
c%OS           ZMI = PYMIN
c%OS           ZMA = PYMAX
c%OS         ELSE
c%OS           CALL BSCLIN(2,PYMIN,PYMAX,ZMI,ZMA,NST)
c%OS         ENDIF
c%OSC
c%OS         DO 1 J1=1,KN
c%OS            IF (PY(J1) .LT. ZMI) PY(J1) = ZMI
c%OS            IF (PY(J1) .GT. ZMA) PY(J1) = ZMA
c%OS 1       CONTINUE
c%OSC
c%OS         CALL BAXIS(2,ZMI,(ZMA-ZMI)/INUY,ZMA,KCTY)
c%OSC
c%OSC  PLOT THE FRAME, THE GRID AND THE LINE OF THE FUNCTION
c%OSC
c%OS         CALL BFRAME(ZFRAW)
c%OS         CALL BLIWDH(ZLIW)
c%OS         CALL BLINE(PX,PY,KN)
c%OSC
c%OSC  PLOT THE TITLE
c%OSC
c%OS         CALL BTITLE(KTITL,ZHTI,INLTI)
c%OSC
c%OS         RETURN
c%OS         END


        SUBROUTINE GRAPHEN2(PXMAX,PXMIN,PYMAX,PYMIN,PX,PY,MDKN,KN,
     S  KPLOT,PXOR,PYOR,PXLE,PYLE,KCTX,KCTY,KTITL,KROX,KROY)
C
C     PLOT N CURVES: PY(I,N)
C
C  KROX = 0 FIRST VALUE OF THE X-AXIS IS NOT A ROUNDED VALUE
C         1 FIRST VALUE OF THE X-AXIS IS A ROUNDED VALUE
C  KROY   SAME BUT FOR THE Y AXIS
C
         DIMENSION PX(KN),PY(MDKN,KPLOT)
         CHARACTER*80 KCTX,KCTY,KTITL(KPLOT+1)
C-----------------------------------------------------------------------

         DO IPLOT=1,KPLOT
           CALL GRAPHE(PXMAX,PXMIN,PYMAX,PYMIN,PX,PY(1,IPLOT),KN,
     +       PXOR,PYOR,PXLE,PYLE,KCTX,KCTY,KTITL(KPLOT+1),KROX,KROY)
         ENDDO
C
         RETURN
         END


         SUBROUTINE JNINT
         PRINT*,'SALUT JNINT'
         RETURN
         END
         SUBROUTINE DRWA4(KTEXT)
C        #######################
C  PLOT A BOX OF DIMENSION A4 AND WRITE TITLE, DATE AND TIME
C
         CHARACTER*132 KTEXT(1:*)
C
C  DRAW A BOX OF DIMENSION A4
C
         CALL RRECT(0.,0.,210.,297.,0,1)
C
C  PLOT TITLE, DATE AND TIME
C
         CALL RTXHEI(3.)
         CALL RTX(-1,KTEXT(1), 20.,287.)
         CALL RTX(-1,KTEXT(2),100.,287.)
         CALL RTX(-1,KTEXT(3),180.,287.)
C
         RETURN
         END
         SUBROUTINE D6SEC
C        ################
C
C  DIVIDE A4 PAGE INTO 6 EQUAL AREAS OF 90*90(MM*MM)
C
         DIMENSION ZR(2),  ZZ(2)
C
         CALL RRECT(15.,10.,195.,280.,0,1)
C
         ZR(1) = 105.
         ZR(2) = 105.
         ZZ(1) = 10.
         ZZ(2) = 280.
C
         CALL GVECT(ZR,ZZ,2)
C
         ZR(1) = 15.
         ZR(2) = 195.
         ZZ(1) = 100.
         ZZ(2) = 100.
C
         CALL GVECT(ZR,ZZ,2)
C
         ZR(1) = 15.
         ZR(2) = 195.
         ZZ(1) = 190.
         ZZ(2) = 190.
C
         CALL GVECT(ZR,ZZ,2)
C
         RETURN
         END
         SUBROUTINE A4SCAL(PRM,PZM,PSCA,PR,PZ,KN)
C        ########################################
C
C  SCALE SOLUTION FOR CONTOUR PLOT
C
         DIMENSION
     R   PR(KN),   PZ(KN)
C
         DO 1 J1=1,KN
C
         PR(J1) = PRM + PSCA * PR(J1)
         PZ(J1) = PZM + PSCA * PZ(J1)
C
    1    CONTINUE
C
         RETURN
         END   
         SUBROUTINE IZERO(KV,KN)
C        #######################
C
C  RESET INTEGER ARRAY TO 0
C
         DIMENSION  KV(KN)
C
         DO 1 J1=1,KN
C
         KV(J1) = 0
C
    1    CONTINUE
C
         RETURN
         END        
         SUBROUTINE VZERO(PX,KN)
C        #######################
C
C THIS SUBROUTINE ZEROES A GIVEN REAL VECTOR
C
C---*----*----*----*----*----*----*----*----*----*----*----*----*----*
C
C+SUN    IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
         DIMENSION
     R   PX(KN)
C
         DO 1 J1=1,KN
C
         PX(J1) = 0.
C
    1    CONTINUE
C
         RETURN
         END
         FUNCTION ISMIN(KN,PV,KINC)
C
C+SUN    IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
         DIMENSION PV(KN)
C
         IF (KN .LE. 0) RETURN
C
         I     = 1
         ISMIN = 1
C
         DO 1 J1=1,KN
C
         IF (PV(I) .LT. PV(ISMIN)) ISMIN = I         
C
         I = I + KINC
C
         IF (I .GT. KN) RETURN
C
    1    CONTINUE   
C
         RETURN
         END
         FUNCTION ISMAX(KN,PV,KINC)
C
C+SUN    IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
         DIMENSION PV(KN)
C
         IF (KN .LE. 0) RETURN
C
         I     = 1
         ISMAX = 1
C
         DO 1 J1=1,KN
C
         IF (PV(I) .GT. PV(ISMAX)) ISMAX = I         
C
         I = I + KINC
C
         IF (I .GT. KN) RETURN
C
    1    CONTINUE   
C
         RETURN
         END
         SUBROUTINE RTEXT1(K,KN1,PV,KTEXT)
C        #################################
C
C
         CHARACTER*(*) KN1, KTEXT
         DIMENSION PV(*)
C
         WRITE (KTEXT,9900) KN1,(PV(J),J=1,K)
C
         RETURN
 9900    FORMAT(A7,5(1PG12.4),'$')
         END
         SUBROUTINE RTEXT2(KN1,PV1,KN2,PV2,KTEXT)
C        ########################################
C
C
         CHARACTER*(*) KN1, KN2, KTEXT
C
         WRITE (KTEXT,9900) KN1,PV1,KN2,PV2
C
         RETURN
 9900    FORMAT(A10,1PE10.3,A10,1PG10.3,'$')
         END
