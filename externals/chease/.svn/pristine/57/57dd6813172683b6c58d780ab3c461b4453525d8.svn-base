!!*DECK C3SB08
!*CALL PROCESS
SUBROUTINE GDATAEXT(PFILE,NBKEYWRD,PKEYWRD,NBPOINTS,PVALUES &
     &  ,MDVALUES,KMESSG,KOPT,KINFO)
  !        ###############################################################
  !                                        AUTHORS:
  !                                        O. SAUTER,  CRPP-EPFL
  !**********************************************************************
  !     GETS NBKEYWRD SETS OF DATA FROM FILE PFILE. EACH SET IS OF THE FORM:
  !
  !     KEYWORD   (letters up to character @)
  !     NB.OF POINTS
  !     DATA(I=1,NB.OF POINTS)
  !
  !     THE DATASETS CORRESPONDING TO THE KEYWORDS PKEYWRD(J=1,NBKEYWRD) ARE
  !     READ FROM THE FILE. THE NUMBER OF POINTS ARE STORED IN NBPOINTS(J)
  !     AND THE DATA IN PVALUES(I,J), I=1,|NBPOINTS(J)|.
  !     NOTE THAT NBPOINTS(J) CAN BE NEGATIVE. A NEGATIVE VALUE MEANS THAT
  !     IT IS GIVEN WITH RESPECT TO PSI RATHER THAN S ~ SQRT(PSI).
  !
  !     THE ROUTINE CAN BE CALLED IN SEQUENCE TO FETCH ONE DATASET AT A TIME
  !     AND SAVE THEM IN DIFFERENT ARRAYS.
  !
  !     IT USES THE FREE "A" FORMAT FOR READING THE KEYWORD LINES. THIS MIGHT
  !     HAVE AN EXTRA SPACE AT THE BEGINNING DEPENDING ON THE MACHINE
  !
  !     PFILE:    NAME OF FILE TO READ DATA FROM
  !     NBKEYWRD: NUMBER OF SETS OF DATA TO READ
  !     PKEYWRD:  TITLES OF DATASETS TO READ
  !     NBPOINTS: NB. OF POINTS OF GIVEN DATASETS, NEGATIVE IF IN TERMS OF PSI
  !     .         OTHERWISE IN TERMS OF S [0,1]
  !     PVALUES:  VALUES OF DATASETS READ
  !     MDVALUES: 1ST DIMENSION OF PVALUES
  !     KMESSG:   =0 NO MESSAGES, .GE.1 PRINT MESSAGE WHEN KEYWORD NOT FOUND
  !     .         .GE.2 ALSO PRINT MESSAGES IF DATA VS. PSI OR S, =3 ALL MSSG
  !     KOPT:     =0, DO NOT CHANGE ANY ARRAYS. IF |KOPT|>0, CHANGE THE KOPT'TH
  !     .         KEYWORD ARRAY ACCORDING TO S OR PSI, DEPENDING ON SIGN OF KOPT.
  !     .         >0: CHANGE KOPT'TH KEYWORD TO PSI IF NECESSARY
  !     .         <0: CHANGE -KOPT'TH KEYWORD TO S IF NECESSARY
  !     .         TYPICALLY, THE PSI OR S ARRAY MIGHT BE CHANGED TO THE OTHER ONE
  !     .         S OR PSI IF WANTED. SEE 2.3 BELOW
  !     KINFO:    NON-ZERO IF THERE WAS AN ERROR IN READING THE FILE
  !
  !     USES IUNIT = 79, OPEN AND CLOSES THE FILE EACH TIME
  !     REWINDS THE FILE BETWEEN EACH SEARCH FOR A KEYWORD, IT IS SLOWER BUT ALLOWS
  !     ONE TO HAVE EMPTY LINES IN BETWEEN DATASETS
  !**********************************************************************
  !
  USE prec_const
  IMPLICIT NONE
  REAL(RKIND)      ::     ZDPSI
  REAL(RKIND)      ::     ZPSI0
  REAL(RKIND)      ::     ZPSI1
  INTEGER          ::     KOPT
  REAL(RKIND)      ::     PVALUES
  INTEGER          ::     NBPOINTS
  INTEGER          ::     I
  INTEGER          ::     IZTEXT
  INTEGER          ::     J
  INTEGER          ::     KMESSG
  INTEGER          ::     KINFO
  INTEGER          ::     IUNIT
  INTEGER          ::     MDVALUES
  INTEGER          ::     NBKEYWRD
  DIMENSION NBPOINTS(NBKEYWRD), PVALUES(MDVALUES,NBKEYWRD)
  CHARACTER PFILE*(*), PKEYWRD(NBKEYWRD)*(*)
  CHARACTER ZTEXT*150, ZLINE*150
  !
  DATA IUNIT /79/
  !-----------------------------------------------------------------------
  !
  !     1. OPEN THE FILE
  !
  KINFO = 0
  OPEN(UNIT=IUNIT, FILE=PFILE)
  !
  !     2. LOOP OVER KEYWORDS
  !
  IF (KMESSG .GE. 1) &
       &     WRITE(6,'(/"MESSAGES FROM ROUTINE GDATAEXT"/)')
  DO J=1,NBKEYWRD
     ZTEXT = PKEYWRD(J)
     IZTEXT = LEN(ZTEXT)
     DO I=1,IZTEXT
        IF (ZTEXT(I:I) .EQ. '@') GO TO 201
     END DO
201  CONTINUE 
     IZTEXT = I - 1
     IF (KMESSG .GE. 3) THEN
        PRINT *,' KEYWORD OF LEN= ',IZTEXT," :"
        WRITE(6,'(A)') ZTEXT(1:IZTEXT)
     ENDIF
     !
     !     2.1 REWIND FILE AND FIND KEYWORD
     REWIND(IUNIT)
210  CONTINUE 
     READ(IUNIT,'(A)',END=211) ZLINE
     IF (ZLINE(1:IZTEXT) .EQ. ZTEXT(1:IZTEXT)) GO TO 212
     GO TO 210
211  CONTINUE 
     !     KEYWORD NOT FOUND, GO TO NEXT KEYWORD. IF KMESSG.GE.1, PRINT MESSAGE
     KINFO = KINFO + 1
     IF (KMESSG .GE. 1) &
          &       WRITE(6,'(" FOLLOWING KEYWORD WAS NOT FOUND: ",A)') &
          &         ZTEXT(1:IZTEXT)
     GO TO 200
     !     KEYWORD FOUND
212  CONTINUE 
     !
     !     2.2 READ DATA
     !
     READ(IUNIT,*) NBPOINTS(J)
     IF (NBPOINTS(J).EQ.0 .OR. abs(NBPOINTS(J)).GT.MDVALUES) THEN
        PRINT *,' BAD NUMBER OF POINTS IN GDATAEXT: NBPOINTS(',J &
             &         ,')= ',NBPOINTS(J)
        KINFO = KINFO + 100
        GO TO 200
     ELSE IF (NBPOINTS(J) .GT. 0) THEN
        WRITE(6,'(" DATA FOR KEYWORD= ",A, &
             &         " IS ASSUMED TO BE VS. S")')   ZLINE
     ELSE
        WRITE(6,'(" DATA FOR KEYWORD= ",A, &
             &         " IS ASSUMED TO BE VS. PSI")') ZLINE
     ENDIF
     READ(IUNIT,*) (PVALUES(I,J),I=1,ABS(NBPOINTS(J)))
     !
     !     2.3 CHANGE S OR PSI TO S OR PSI.
     !
     !     IF |KOPT| = J, THEN CHANGE ARRAY TO DESIRED FUNCTION. IF KOPT>0, THEN
     !     S = SQRT((PSI-PSI0)/(PSIEDGE-PSI0)) IS WANTED, IF KOPT<0, PSI IN [0,1] IS WANTED
     !
     IF (ABS(KOPT) .EQ. J) THEN
        !
        !     2.3.1 FUNCTION OF S, KOPT POSITIVE
        !
        IF (KOPT .GT. 0) THEN
           !     IF NBPOINTS>0, ALREADY IN TERMS OF S => NEED ONLY TREAT NBPOINTS<0
           IF (NBPOINTS(J) .LT. 0) THEN
              ZPSI1 = PVALUES(-NBPOINTS(J),J)
              ZPSI0 = PVALUES(1,J)
              ZDPSI = PVALUES(-NBPOINTS(J),J) - ZPSI0
              PVALUES(1,J) = 0.0_RKIND
              DO I=2,NBPOINTS(J)
                 PVALUES(I,J) = SQRT((PVALUES(I,J)-ZPSI0)/ZDPSI)
              END DO
           ENDIF
           !
           !     2.3.2 FUNCTION OF PSI, KOPT NEGATIVE
           !
        ELSE
           !     IF NBPOINTS<0, ALREADY IN TERMS OF PSI => NEED ONLY TREAT NBPOINTS>0
           IF (NBPOINTS(J) .GT. 0) THEN
              DO I=1,NBPOINTS(J)
                 PVALUES(I,J) = PVALUES(I,J)**2
              END DO
           ENDIF
           !
        ENDIF
     ENDIF
     !
200  CONTINUE 
  END DO
  !
  !     3. CLOSE FILE
  !
  CLOSE(IUNIT)
  !
  RETURN
END SUBROUTINE GDATAEXT
