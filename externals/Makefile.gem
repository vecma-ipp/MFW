#/* -*- makefile -*- */


# paths ########################################################################
SRCDIR = gem
OBJDIR = gem/${SYS}



# set up the VPATH for searching for source files ##############################
VPATH = ${SRCDIR}/actor \
	${SRCDIR}/include ${SRCDIR}/src ${SRCDIR}/src/plotting \
	${SRCDIR}/main ${SRCDIR}/starts ${SRCDIR}/aux ${SRCDIR}/plots 

# additional flags #############################################################
#export DOOPT=yes
export DODEBUG=no
#export DODEBUG=yes

LIB = libgem.a

FFTLIB	= fft_w3

IFLAGS = -I${SRCDIR}/include -I${SRCDIR}/src -I${SRCDIR}/src/plotting

FPPFLAGS += -D$(FFTLIB) ${FPPGEM} -DDODIFFS ${IFLAGS} -I${INC_UAL}

INCLUDES = -I${INC_UAL} -I${INC_TYPES} -I${INC_CONSTANTS} -I${INC_XML} \
	-I${INC_BDS} -I${OBJDIR} ${IFLAGS}

ifeq (,$(findstring -r8,$(FC90FLAGS)))
ifeq ($(FC90),ifort)
  FC90FLAGS += -r8
else
  FC90FLAGS += -fdefault-real-8 -fdefault-double-8
endif
endif

FC90FLAGS += ${INCLUDES} ${MODSPEC}${OBJDIR} 

ifeq ($(DODEBUG),yes)
#intel here...
FC90FLAGS += -O0 -check all -stand f95 -g -traceback 
#-fbounds-check -warn all -check all -init=snan
PERF=yes
else 
ifeq ($(DOOPT),yes)
FC90FLAGS += -O3
else
FC90FLAGS += -O2
#FC90FLAGS += -O1
#FC90FLAGS += -O0
endif
endif

FC90FLAGS += ${FFTW_INC} 
#-I${FFTW_INC}
FC77FLAGS = ${FC90FLAGS}

LDFLAGS += ${FFTW_LIB}
#-L${FFTW_LIB} -lfftw3



# objects files ################################################################
HDR = 	${OBJDIR}/dim.o ${OBJDIR}/mpes.o ${OBJDIR}/coeff.o \
	${OBJDIR}/vars.o ${OBJDIR}/vconv.o ${OBJDIR}/solnscr.o \
	${OBJDIR}/fft.o ${OBJDIR}/pvars.o ${OBJDIR}/plotins.o \
	${OBJDIR}/itm_cpos.o 

# src and header files
#HDR = dim.h90 mpes.h90 coeff.h90 vars.h90 vconv.h90 solnscr.h90 fft.h90 \
#	itm_cpos.h90

OBJ = 	${OBJDIR}/snapsin.o ${OBJDIR}/snaps.o ${OBJDIR}/psnaps.o \
	${OBJDIR}/bndys.o ${OBJDIR}/bndys2d.o ${OBJDIR}/sends.o \
	${OBJDIR}/yshift.o ${OBJDIR}/metric.o ${OBJDIR}/energy.o \
	${OBJDIR}/probes.o ${OBJDIR}/sources.o ${OBJDIR}/step.o \
	${OBJDIR}/polarise.o ${OBJDIR}/reduce.o ${OBJDIR}/colella.o \
	${OBJDIR}/mg2d.o ${OBJDIR}/delsq2d.o ${OBJDIR}/init_bath.o \
	${OBJDIR}/ran1.o ${OBJDIR}/itmparms.o ${OBJDIR}/itmfluxes.o \
	${OBJDIR}/gem.o ${OBJDIR}/assign_turb_parameters.o

WOBJ = ${OBJDIR}/wrapper.o

#MOD = $(HDR:.h90=.o)


# rules ########################################################################
${OBJDIR}/%.o: %.f90
	${MPIF90} -o $@ -c $< $(FC90FLAGS)


${OBJDIR}/%.o: %.f
	${MPIF90} -o $@ -c $< $(FC77FLAGS) 


%.f90: %.h90
	$(FPP) $(FPPFLAGS) $< $@
#cp $< $@ 


%.f90: %.F90
	$(FPP) $(FPPFLAGS) $< $@


all: ${SYS} ${OBJDIR}/libgem.a


${OBJDIR}/libgem.a: ${HDR} ${OBJ}
	ar -r $@ $(HDR) ${OBJ}
	ranlib $@


#${OBJDIR}/wrapper: ${OBJDIR}/libgem.a  ${WOBJ} 
#	${MPIF90} -o $@ ${WOBJ} $< ${LDFLAGS} -L${LIB_UAL} -L${LIB_BDS} -lbds -lual


${SYS}:
	@mkdir -p ${OBJDIR}


clean:
	rm -rf ${OBJDIR}




# dependences ##################################################################
dw.o: parm-set.h90 mppein.h90
step.o: visc.h90 pvisc.h90 neighbors.h90
metric.o: mset.h90 SetParms.h90

${OBJDIR}/fft.h90: fft.F90
	$(FPP) $(FPPFLAGS) $< $@

${OBJDIR}/mpes.h90: mpes.F90
	$(FPP) $(FPPFLAGS) $< $@

